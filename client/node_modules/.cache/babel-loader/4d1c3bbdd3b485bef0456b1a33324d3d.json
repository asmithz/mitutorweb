{"ast":null,"code":"var _jsxFileName = \"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Bandeja.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Peticion from '../peticion/Peticion';\nimport Chat from '../peticion_chat/ChatAsincrono';\nimport DetectarTipoUsuarioID from '../controllers/DetectarTipoUsuario';\nimport ObtenerUsuarioID from '../controllers/ObtenerUsuarioID';\nimport '../pages_css/Bandeja.css';\nimport '../peticion/Peticion.css';\nimport axios from 'axios';\nimport ChatAsincrono from '../peticion_chat/ChatAsincrono';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_peticion = axios.create({\n  withCredentials: true,\n  credentials: 'include',\n  baseURL: `http://localhost:2000/api/peticion`\n});\nconst api_chat = axios.create({\n  withCredentials: true,\n  credentials: 'include',\n  baseURL: `http://localhost:2000/api/chat`\n});\n\nconst Bandeja = () => {\n  _s();\n\n  const mi_token = localStorage.getItem('x-token');\n  const usuarioID = ObtenerUsuarioID();\n  const tipo_usuario = DetectarTipoUsuarioID();\n  const [peticionesFetch, setpeticionesFetch] = useState([]);\n  const [endFetch, setendFetch] = useState(true);\n  useEffect(() => {\n    //checkear cuando se obtenga el id del usuario\n    if (usuarioID && tipo_usuario) {\n      const obtenerPeticiones = async () => {\n        try {\n          const response = await api_peticion.get(\"/obtenerPeticion/\" + usuarioID, {\n            headers: {\n              'Content-type': 'application/json',\n              'x-token': mi_token\n            }\n          });\n\n          if (response && response.data.peticiones) {\n            if (endFetch) {\n              setpeticionesFetch(response.data.peticiones);\n              setendFetch(false);\n            }\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      obtenerPeticiones();\n    }\n  }, [usuarioID, tipo_usuario, peticionesFetch]);\n\n  const mostrarPeticiones = () => {\n    if (peticionesFetch && peticionesFetch.length > 0) {\n      if (tipo_usuario.tipo === \"tutor\" || tipo_usuario.tipo === \"estudiante\") {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  const [chatsFetch, setchatsFetch] = useState([]);\n  const [endChatFetch, setendChatFetch] = useState(true);\n  useEffect(() => {\n    //checkear cuando se obtenga el id del usuario\n    if (usuarioID && tipo_usuario) {\n      const obtenerChats = async () => {\n        try {\n          const response = await api_chat.get(\"/obtenerChat/\" + usuarioID, {\n            headers: {\n              'Content-type': 'application/json',\n              'x-token': mi_token\n            }\n          });\n\n          if (response && response.data.chats) {\n            if (endChatFetch) {\n              setchatsFetch(response.data.chats);\n              console.log(chatsFetch);\n              setendChatFetch(false);\n            }\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      obtenerChats();\n    }\n  }, [usuarioID, tipo_usuario, chatsFetch]);\n\n  const mostrarChats = () => {\n    if (chatsFetch && chatsFetch.length > 0) {\n      if (tipo_usuario.tipo === \"tutor\" || tipo_usuario.tipo === \"estudiante\") {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plantilla-bandeja\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bandeja de peticiones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modulos\",\n      children: mostrarPeticiones && peticionesFetch.map((peticion, i) => {\n        return /*#__PURE__*/_jsxDEV(Peticion, {\n          titulo: peticion.titulo,\n          estado: peticion.estado,\n          id_tutor: peticion.tutor_id,\n          id_estudiante: peticion.estudiante_id,\n          id_peticion: peticion._id,\n          tipo_usuario: tipo_usuario\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modulos\",\n      children: mostrarChats && chatsFetch.map((chat, i) => {\n        return /*#__PURE__*/_jsxDEV(ChatAsincrono, {\n          titulo: chat.titulo,\n          estado: chat.estado,\n          id_receptor: chat.receptor_id,\n          id_emisor: chat.emisor_id,\n          id_chat: chat._id,\n          tipo_usuario: tipo_usuario\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bandeja, \"hgTPcTiNRj1ejBY/IGpDO+2+Fmk=\");\n\n_c = Bandeja;\nexport default Bandeja;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bandeja\");","map":{"version":3,"sources":["/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Bandeja.js"],"names":["React","useEffect","useState","Peticion","Chat","DetectarTipoUsuarioID","ObtenerUsuarioID","axios","ChatAsincrono","api_peticion","create","withCredentials","credentials","baseURL","api_chat","Bandeja","mi_token","localStorage","getItem","usuarioID","tipo_usuario","peticionesFetch","setpeticionesFetch","endFetch","setendFetch","obtenerPeticiones","response","get","headers","data","peticiones","error","console","log","mostrarPeticiones","length","tipo","chatsFetch","setchatsFetch","endChatFetch","setendChatFetch","obtenerChats","chats","mostrarChats","map","peticion","i","titulo","estado","tutor_id","estudiante_id","_id","chat","receptor_id","emisor_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Peticion from '../peticion/Peticion'\nimport Chat from '../peticion_chat/ChatAsincrono'\nimport DetectarTipoUsuarioID from '../controllers/DetectarTipoUsuario'\nimport ObtenerUsuarioID from '../controllers/ObtenerUsuarioID'\nimport '../pages_css/Bandeja.css'\nimport '../peticion/Peticion.css'\nimport axios from 'axios'\nimport ChatAsincrono from '../peticion_chat/ChatAsincrono'\n\n\nconst api_peticion = axios.create({\n    withCredentials: true, \n    credentials: 'include',\n    baseURL: `http://localhost:2000/api/peticion`\n})\n\nconst api_chat = axios.create({\n    withCredentials: true, \n    credentials: 'include',\n    baseURL: `http://localhost:2000/api/chat`\n})\n\nconst Bandeja = () => {\n  const mi_token = localStorage.getItem('x-token')\n  const usuarioID = ObtenerUsuarioID()\n  const tipo_usuario = DetectarTipoUsuarioID()\n  const [peticionesFetch, setpeticionesFetch] = useState([])\n  const [endFetch, setendFetch] = useState(true)\n\n  useEffect(()=>{\n    //checkear cuando se obtenga el id del usuario\n    if(usuarioID && tipo_usuario){\n    const obtenerPeticiones = async () => {\n      try{\n        const response = await api_peticion.get(\"/obtenerPeticion/\"+usuarioID, {\n                    headers: {\n                    'Content-type': 'application/json',\n                    'x-token': mi_token\n                    }}\n                  )\n        if(response && response.data.peticiones){\n          if(endFetch){\n            setpeticionesFetch(response.data.peticiones)\n            setendFetch(false)\n          }\n        }\n      }catch(error){\n        console.log(error)\n      }\n    }\n    obtenerPeticiones()\n    }\n  },[usuarioID, tipo_usuario, peticionesFetch])\n\n  const mostrarPeticiones = () => {\n    if(peticionesFetch && peticionesFetch.length > 0){\n      if(tipo_usuario.tipo === \"tutor\" || tipo_usuario.tipo === \"estudiante\"){\n        return true\n      }\n    }\n    else{\n      return false\n    }\n  }\n\n  const [chatsFetch, setchatsFetch] = useState([])\n  const [endChatFetch, setendChatFetch] = useState(true)\n\n  useEffect(()=>{\n    //checkear cuando se obtenga el id del usuario\n    if(usuarioID && tipo_usuario){\n    const obtenerChats = async () => {\n      try{\n        const response = await api_chat.get(\"/obtenerChat/\"+usuarioID, {\n                    headers: {\n                    'Content-type': 'application/json',\n                    'x-token': mi_token\n                    }}\n                  )\n        if(response && response.data.chats){\n          if(endChatFetch){\n            setchatsFetch(response.data.chats)\n            console.log(chatsFetch)\n            setendChatFetch(false)\n          }\n        }\n      }catch(error){\n        console.log(error)\n      }\n    }\n    obtenerChats()\n    }\n  },[usuarioID, tipo_usuario, chatsFetch])\n\n  const mostrarChats = () => {\n    if(chatsFetch && chatsFetch.length > 0){\n      if(tipo_usuario.tipo === \"tutor\" || tipo_usuario.tipo === \"estudiante\"){\n        return true\n      }\n    }\n    else{\n      return false\n    }\n  }\n\n  return(\n    <div className=\"plantilla-bandeja\">\n      <br/>\n        <h1>Bandeja de peticiones</h1>\n        <div className=\"modulos\">\n            { mostrarPeticiones && \n              peticionesFetch.map((peticion, i) => {\n                return <Peticion key={i} titulo={peticion.titulo} \n                estado={peticion.estado} \n                id_tutor={peticion.tutor_id} \n                id_estudiante={peticion.estudiante_id}\n                id_peticion={peticion._id}\n                tipo_usuario={tipo_usuario}/>\n              })\n            }\n        </div>\n        <h1>Chats</h1>\n        <div className=\"modulos\">\n            { mostrarChats && \n              chatsFetch.map((chat, i) => {\n                return <ChatAsincrono key={i} titulo={chat.titulo} \n                estado={chat.estado} \n                id_receptor={chat.receptor_id} \n                id_emisor={chat.emisor_id}\n                id_chat={chat._id}\n                tipo_usuario={tipo_usuario}/>\n              })\n            }\n        </div>\n    </div>\n  )\n}\n\nexport default Bandeja\n"]},"metadata":{},"sourceType":"module"}