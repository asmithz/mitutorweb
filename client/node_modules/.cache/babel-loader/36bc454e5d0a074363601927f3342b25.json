{"ast":null,"code":"import { useControlledState } from '../../hooks/useControlledState';\n/**\n * Represents the available `action` types for the `SchedulerItemShowRemoveDialogAction` objects.\n *\n * The available actions are:\n * - `SHOW_REMOVE_DIALOG_SET`\n * - `SHOW_REMOVE_DIALOG_OPEN`\n * - `SHOW_REMOVE_DIALOG_CLOSE`\n * - `SHOW_REMOVE_DIALOG_RESET`\n * - `SHOW_REMOVE_DIALOG_TOGGLE`\n */\n\nexport var SHOW_REMOVE_DIALOG_ACTION;\n\n(function (SHOW_REMOVE_DIALOG_ACTION) {\n  SHOW_REMOVE_DIALOG_ACTION[\"set\"] = \"SHOW_REMOVE_DIALOG_SET\";\n  SHOW_REMOVE_DIALOG_ACTION[\"open\"] = \"SHOW_REMOVE_DIALOG_OPEN\";\n  SHOW_REMOVE_DIALOG_ACTION[\"close\"] = \"SHOW_REMOVE_DIALOG_CLOSE\";\n  SHOW_REMOVE_DIALOG_ACTION[\"reset\"] = \"SHOW_REMOVE_DIALOG_RESET\";\n  SHOW_REMOVE_DIALOG_ACTION[\"toggle\"] = \"SHOW_REMOVE_DIALOG_TOGGLE\";\n})(SHOW_REMOVE_DIALOG_ACTION || (SHOW_REMOVE_DIALOG_ACTION = {}));\n\nvar showRemoveDialogReducer = function (state, action) {\n  switch (action.type) {\n    case SHOW_REMOVE_DIALOG_ACTION.reset:\n      return false;\n\n    case SHOW_REMOVE_DIALOG_ACTION.set:\n      return action.payload;\n\n    case SHOW_REMOVE_DIALOG_ACTION.open:\n      return true;\n\n    case SHOW_REMOVE_DIALOG_ACTION.close:\n      return false;\n\n    case SHOW_REMOVE_DIALOG_ACTION.toggle:\n      return !state;\n\n    default:\n      return state;\n  }\n};\n/** @hidden */\n\n\nexport var useShowRemoveDialog = function (defaultProp, prop, callback) {\n  var _a = useControlledState(defaultProp, prop, callback),\n      showRemoveDialog = _a[0],\n      setShowRemoveDialog = _a[1];\n\n  var handleShowRemoveDialogAction = function (action) {\n    var newShowRemoveDialog = showRemoveDialogReducer(showRemoveDialog, action);\n    setShowRemoveDialog(newShowRemoveDialog);\n  };\n\n  return [showRemoveDialog, setShowRemoveDialog, handleShowRemoveDialogAction];\n};","map":{"version":3,"sources":["/home/asmith/taller/proyecto1/proyecto-taller/client/node_modules/@progress/kendo-react-scheduler/dist/es/items/hooks/use-show-remove-item-dialog.js"],"names":["useControlledState","SHOW_REMOVE_DIALOG_ACTION","showRemoveDialogReducer","state","action","type","reset","set","payload","open","close","toggle","useShowRemoveDialog","defaultProp","prop","callback","_a","showRemoveDialog","setShowRemoveDialog","handleShowRemoveDialogAction","newShowRemoveDialog"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,gCAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,yBAAJ;;AACP,CAAC,UAAUA,yBAAV,EAAqC;AAClCA,EAAAA,yBAAyB,CAAC,KAAD,CAAzB,GAAmC,wBAAnC;AACAA,EAAAA,yBAAyB,CAAC,MAAD,CAAzB,GAAoC,yBAApC;AACAA,EAAAA,yBAAyB,CAAC,OAAD,CAAzB,GAAqC,0BAArC;AACAA,EAAAA,yBAAyB,CAAC,OAAD,CAAzB,GAAqC,0BAArC;AACAA,EAAAA,yBAAyB,CAAC,QAAD,CAAzB,GAAsC,2BAAtC;AACH,CAND,EAMGA,yBAAyB,KAAKA,yBAAyB,GAAG,EAAjC,CAN5B;;AAOA,IAAIC,uBAAuB,GAAG,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,yBAAyB,CAACK,KAA/B;AACI,aAAO,KAAP;;AACJ,SAAKL,yBAAyB,CAACM,GAA/B;AACI,aAAOH,MAAM,CAACI,OAAd;;AACJ,SAAKP,yBAAyB,CAACQ,IAA/B;AACI,aAAO,IAAP;;AACJ,SAAKR,yBAAyB,CAACS,KAA/B;AACI,aAAO,KAAP;;AACJ,SAAKT,yBAAyB,CAACU,MAA/B;AACI,aAAO,CAACR,KAAR;;AACJ;AACI,aAAOA,KAAP;AAZR;AAcH,CAfD;AAgBA;;;AACA,OAAO,IAAIS,mBAAmB,GAAG,UAAUC,WAAV,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAuC;AACpE,MAAIC,EAAE,GAAGhB,kBAAkB,CAACa,WAAD,EAAcC,IAAd,EAAoBC,QAApB,CAA3B;AAAA,MAA0DE,gBAAgB,GAAGD,EAAE,CAAC,CAAD,CAA/E;AAAA,MAAoFE,mBAAmB,GAAGF,EAAE,CAAC,CAAD,CAA5G;;AACA,MAAIG,4BAA4B,GAAG,UAAUf,MAAV,EAAkB;AACjD,QAAIgB,mBAAmB,GAAGlB,uBAAuB,CAACe,gBAAD,EAAmBb,MAAnB,CAAjD;AACAc,IAAAA,mBAAmB,CAACE,mBAAD,CAAnB;AACH,GAHD;;AAIA,SAAO,CAACH,gBAAD,EAAmBC,mBAAnB,EAAwCC,4BAAxC,CAAP;AACH,CAPM","sourcesContent":["import { useControlledState } from '../../hooks/useControlledState';\n/**\n * Represents the available `action` types for the `SchedulerItemShowRemoveDialogAction` objects.\n *\n * The available actions are:\n * - `SHOW_REMOVE_DIALOG_SET`\n * - `SHOW_REMOVE_DIALOG_OPEN`\n * - `SHOW_REMOVE_DIALOG_CLOSE`\n * - `SHOW_REMOVE_DIALOG_RESET`\n * - `SHOW_REMOVE_DIALOG_TOGGLE`\n */\nexport var SHOW_REMOVE_DIALOG_ACTION;\n(function (SHOW_REMOVE_DIALOG_ACTION) {\n    SHOW_REMOVE_DIALOG_ACTION[\"set\"] = \"SHOW_REMOVE_DIALOG_SET\";\n    SHOW_REMOVE_DIALOG_ACTION[\"open\"] = \"SHOW_REMOVE_DIALOG_OPEN\";\n    SHOW_REMOVE_DIALOG_ACTION[\"close\"] = \"SHOW_REMOVE_DIALOG_CLOSE\";\n    SHOW_REMOVE_DIALOG_ACTION[\"reset\"] = \"SHOW_REMOVE_DIALOG_RESET\";\n    SHOW_REMOVE_DIALOG_ACTION[\"toggle\"] = \"SHOW_REMOVE_DIALOG_TOGGLE\";\n})(SHOW_REMOVE_DIALOG_ACTION || (SHOW_REMOVE_DIALOG_ACTION = {}));\nvar showRemoveDialogReducer = function (state, action) {\n    switch (action.type) {\n        case SHOW_REMOVE_DIALOG_ACTION.reset:\n            return false;\n        case SHOW_REMOVE_DIALOG_ACTION.set:\n            return action.payload;\n        case SHOW_REMOVE_DIALOG_ACTION.open:\n            return true;\n        case SHOW_REMOVE_DIALOG_ACTION.close:\n            return false;\n        case SHOW_REMOVE_DIALOG_ACTION.toggle:\n            return !state;\n        default:\n            return state;\n    }\n};\n/** @hidden */\nexport var useShowRemoveDialog = function (defaultProp, prop, callback) {\n    var _a = useControlledState(defaultProp, prop, callback), showRemoveDialog = _a[0], setShowRemoveDialog = _a[1];\n    var handleShowRemoveDialogAction = function (action) {\n        var newShowRemoveDialog = showRemoveDialogReducer(showRemoveDialog, action);\n        setShowRemoveDialog(newShowRemoveDialog);\n    };\n    return [showRemoveDialog, setShowRemoveDialog, handleShowRemoveDialogAction];\n};\n"]},"metadata":{},"sourceType":"module"}