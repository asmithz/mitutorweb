{"ast":null,"code":"import * as React from 'react';\nimport { MS_PER_DAY } from '@progress/kendo-date-math';\nimport { MS_PER_MINUTE } from '../constants';\n/** @hidden */\n\nexport var toSlots = function (_dateRange, _a, _b) {\n  var step = _a.step;\n  var groups = _b.groups,\n      ranges = _b.ranges;\n  var slots = [];\n  groups.forEach(function (group) {\n    ranges.forEach(function (range) {\n      var viewStart = range.zonedStart;\n      var viewEnd = range.zonedEnd;\n      var offset = viewEnd.timezoneOffset - viewStart.timezoneOffset;\n\n      for (var current = viewStart.clone(), index = 0, deficiency = offset < 0 ? offset * MS_PER_MINUTE * -1 : 0; current.getTime() < viewEnd.getTime(); index++, current = current.addTime(step)) {\n        var _ref = React.createRef();\n\n        var zonedStart = current.clone();\n        var zonedEnd = current.addTime(step);\n        var difference = (zonedEnd.timezoneOffset - zonedStart.timezoneOffset) * MS_PER_MINUTE;\n        var canFill = step < Math.abs(difference);\n\n        if (deficiency && canFill) {\n          deficiency -= step;\n          current = current.addTime(-step);\n        }\n\n        var start = new Date(zonedStart.getTime());\n        var end = new Date(zonedEnd.getTime());\n        var slot = {\n          _ref: _ref,\n          index: index,\n          end: end,\n          start: start,\n          zonedStart: zonedStart,\n          zonedEnd: zonedEnd,\n          range: range,\n          group: group,\n          items: [],\n          isAllDay: MS_PER_DAY <= step\n        };\n        slots.push(slot);\n      }\n    });\n  });\n  return slots;\n};","map":{"version":3,"sources":["/home/asmith/taller/proyecto1/proyecto-taller/client/node_modules/@progress/kendo-react-scheduler/dist/es/services/slotsService.js"],"names":["React","MS_PER_DAY","MS_PER_MINUTE","toSlots","_dateRange","_a","_b","step","groups","ranges","slots","forEach","group","range","viewStart","zonedStart","viewEnd","zonedEnd","offset","timezoneOffset","current","clone","index","deficiency","getTime","addTime","_ref","createRef","difference","canFill","Math","abs","start","Date","end","slot","items","isAllDay","push"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA;;AACA,OAAO,IAAIC,OAAO,GAAG,UAAUC,UAAV,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8B;AAC/C,MAAIC,IAAI,GAAGF,EAAE,CAACE,IAAd;AACA,MAAIC,MAAM,GAAGF,EAAE,CAACE,MAAhB;AAAA,MAAwBC,MAAM,GAAGH,EAAE,CAACG,MAApC;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAe,UAAUC,KAAV,EAAiB;AAC5BH,IAAAA,MAAM,CAACE,OAAP,CAAe,UAAUE,KAAV,EAAiB;AAC5B,UAAIC,SAAS,GAAGD,KAAK,CAACE,UAAtB;AACA,UAAIC,OAAO,GAAGH,KAAK,CAACI,QAApB;AACA,UAAIC,MAAM,GAAIF,OAAO,CAACG,cAAR,GAAyBL,SAAS,CAACK,cAAjD;;AACA,WAAK,IAAIC,OAAO,GAAGN,SAAS,CAACO,KAAV,EAAd,EAAiCC,KAAK,GAAG,CAAzC,EAA4CC,UAAU,GAAGL,MAAM,GAAG,CAAT,GAAaA,MAAM,GAAGhB,aAAT,GAAyB,CAAC,CAAvC,GAA2C,CAAzG,EAA4GkB,OAAO,CAACI,OAAR,KAAoBR,OAAO,CAACQ,OAAR,EAAhI,EAAmJF,KAAK,IAAIF,OAAO,GAAGA,OAAO,CAACK,OAAR,CAAgBlB,IAAhB,CAAtK,EAA6L;AACzL,YAAImB,IAAI,GAAG1B,KAAK,CAAC2B,SAAN,EAAX;;AACA,YAAIZ,UAAU,GAAGK,OAAO,CAACC,KAAR,EAAjB;AACA,YAAIJ,QAAQ,GAAGG,OAAO,CAACK,OAAR,CAAgBlB,IAAhB,CAAf;AACA,YAAIqB,UAAU,GAAG,CAACX,QAAQ,CAACE,cAAT,GAA0BJ,UAAU,CAACI,cAAtC,IAAwDjB,aAAzE;AACA,YAAI2B,OAAO,GAAGtB,IAAI,GAAGuB,IAAI,CAACC,GAAL,CAASH,UAAT,CAArB;;AACA,YAAIL,UAAU,IAAIM,OAAlB,EAA2B;AACvBN,UAAAA,UAAU,IAAIhB,IAAd;AACAa,UAAAA,OAAO,GAAGA,OAAO,CAACK,OAAR,CAAgB,CAAClB,IAAjB,CAAV;AACH;;AACD,YAAIyB,KAAK,GAAG,IAAIC,IAAJ,CAASlB,UAAU,CAACS,OAAX,EAAT,CAAZ;AACA,YAAIU,GAAG,GAAG,IAAID,IAAJ,CAAShB,QAAQ,CAACO,OAAT,EAAT,CAAV;AACA,YAAIW,IAAI,GAAG;AACPT,UAAAA,IAAI,EAAEA,IADC;AAEPJ,UAAAA,KAAK,EAAEA,KAFA;AAGPY,UAAAA,GAAG,EAAEA,GAHE;AAIPF,UAAAA,KAAK,EAAEA,KAJA;AAKPjB,UAAAA,UAAU,EAAEA,UALL;AAMPE,UAAAA,QAAQ,EAAEA,QANH;AAOPJ,UAAAA,KAAK,EAAEA,KAPA;AAQPD,UAAAA,KAAK,EAAEA,KARA;AASPwB,UAAAA,KAAK,EAAE,EATA;AAUPC,UAAAA,QAAQ,EAAEpC,UAAU,IAAIM;AAVjB,SAAX;AAYAG,QAAAA,KAAK,CAAC4B,IAAN,CAAWH,IAAX;AACH;AACJ,KA9BD;AA+BH,GAhCD;AAiCA,SAAOzB,KAAP;AACH,CAtCM","sourcesContent":["import * as React from 'react';\nimport { MS_PER_DAY } from '@progress/kendo-date-math';\nimport { MS_PER_MINUTE } from '../constants';\n/** @hidden */\nexport var toSlots = function (_dateRange, _a, _b) {\n    var step = _a.step;\n    var groups = _b.groups, ranges = _b.ranges;\n    var slots = [];\n    groups.forEach(function (group) {\n        ranges.forEach(function (range) {\n            var viewStart = range.zonedStart;\n            var viewEnd = range.zonedEnd;\n            var offset = (viewEnd.timezoneOffset - viewStart.timezoneOffset);\n            for (var current = viewStart.clone(), index = 0, deficiency = offset < 0 ? offset * MS_PER_MINUTE * -1 : 0; current.getTime() < viewEnd.getTime(); index++, current = current.addTime(step)) {\n                var _ref = React.createRef();\n                var zonedStart = current.clone();\n                var zonedEnd = current.addTime(step);\n                var difference = (zonedEnd.timezoneOffset - zonedStart.timezoneOffset) * MS_PER_MINUTE;\n                var canFill = step < Math.abs(difference);\n                if (deficiency && canFill) {\n                    deficiency -= step;\n                    current = current.addTime(-step);\n                }\n                var start = new Date(zonedStart.getTime());\n                var end = new Date(zonedEnd.getTime());\n                var slot = {\n                    _ref: _ref,\n                    index: index,\n                    end: end,\n                    start: start,\n                    zonedStart: zonedStart,\n                    zonedEnd: zonedEnd,\n                    range: range,\n                    group: group,\n                    items: [],\n                    isAllDay: MS_PER_DAY <= step\n                };\n                slots.push(slot);\n            }\n        });\n    });\n    return slots;\n};\n"]},"metadata":{},"sourceType":"module"}