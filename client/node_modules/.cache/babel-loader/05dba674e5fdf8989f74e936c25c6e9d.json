{"ast":null,"code":"var _jsxFileName = \"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/horario/Horario.js\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form } from 'formik';\nimport React, { useState } from 'react';\nimport BotonFormulario from '../botones/BotonFormulario';\nimport './Horario.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst horas = ['8:00 AM', '9:00 AM', '10:00 AM', '11:00 AM', '12:00 PM', '13:00 PM', '14:00 PM', '15:00 PM', '16:00 PM', '17:00 PM', '18:00 PM', '19:00 PM', '20:00 PM', '21:00 PM', '22:00 PM', '23:00 PM'];\nconst dias = ['Horario', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\nconst horario = [{\n  \"Lunes\": []\n}, {\n  \"Martes\": []\n}, {\n  \"Miércoles\": []\n}, {\n  \"Jueves\": []\n}, {\n  \"Viernes\": []\n}, {\n  \"Sábado\": []\n}, {\n  \"Domingo\": []\n}];\n\nconst Bloques = props => {\n  _s();\n\n  const [seleccion, setSeleccion] = useState(false);\n\n  const seleccionar = estado => {\n    setSeleccion(!seleccion);\n  };\n\n  let bloque = '';\n  {\n    props.dia === \"horario\" ? bloque = /*#__PURE__*/_jsxDEV(\"div\", {\n      hora: props.hora,\n      children: props.hora\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 22\n    }, this) : bloque = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: seleccion ? 'grid-bloque-clicked' : 'grid-bloque',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        hora: props.hora,\n        dia: props.dia,\n        estado: seleccion ? 'true' : 'false',\n        onClick: seleccionar,\n        children: [seleccion ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2611\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2610\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }, this), seleccion ? props.check(props.dia, props.hora) : props.uncheck(props.dia, props.hora)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: bloque\n  }, void 0, false);\n};\n\n_s(Bloques, \"vIohQhy4IjYqMGjhGmytL8CUazk=\");\n\n_c = Bloques;\n\nconst Horas = props => {\n  let bloque = [];\n\n  for (let i = 0; i < horas.length; i++) {\n    {\n      props.dia === \"horario\" ? bloque.push( /*#__PURE__*/_jsxDEV(Bloques, {\n        hora: horas[i],\n        dia: props.dia\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this)) : bloque.push( /*#__PURE__*/_jsxDEV(Bloques, {\n        hora: horas[i],\n        dia: props.dia,\n        check: props.check,\n        uncheck: props.uncheck\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: bloque\n  }, void 0, false);\n};\n\n_c2 = Horas;\n\nconst Dias = props => {\n  let horario = dias.map(dias => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-dias\",\n    children: [dias, dias === 'Horario' ? /*#__PURE__*/_jsxDEV(Horas, {\n      dia: \"horario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Horas, {\n      dia: dias,\n      check: props.check,\n      uncheck: props.uncheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-horario\",\n    children: horario\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Dias;\n\nconst Horario = props => {\n  /*Agrega, al arreglo, la hora al dia que se selecciona*/\n  const checkHora = (diaSeleccionado, horaSeleccionada) => {\n    horario.map(dia => {\n      if (Object.keys(dia)[0] === diaSeleccionado) {\n        if (!Object.values(dia)[0].includes(horaSeleccionada)) {\n          Object.values(dia)[0].push(horaSeleccionada);\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: console.log(JSON.stringify(horario))\n    }, void 0, false);\n  };\n  /*Quita, del arreglo, la hora del dia que se selecciona*/\n\n\n  const uncheckHora = (diaSeleccionado, horaSeleccionada) => {\n    horario.map(dia => {\n      if (Object.keys(dia)[0] === diaSeleccionado) {\n        if (Object.values(dia)[0].includes(horaSeleccionada)) {\n          Object.values(dia)[0].pop(horaSeleccionada);\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: console.log(JSON.stringify(horario))\n    }, void 0, false);\n  };\n  /*Muestra el horario con su className*/\n\n\n  const mostrarHorario = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-card\",\n      children: /*#__PURE__*/_jsxDEV(Dias, {\n        check: checkHora,\n        uncheck: uncheckHora,\n        horario: horario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  };\n\n  const registrarHorarioTutor = () => {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        datos: props.datos,\n        horario: horario\n      },\n      onSubmit: values => console.log(JSON.stringify(values, null, 4)),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(BotonFormulario, {\n          className: \"boton-siguiente\",\n          name: \"boton\",\n          value: \"Registrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.accion === \"registrar\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [mostrarHorario(), registrarHorarioTutor()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Horario;\nexport default Horario;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Bloques\");\n$RefreshReg$(_c2, \"Horas\");\n$RefreshReg$(_c3, \"Dias\");\n$RefreshReg$(_c4, \"Horario\");","map":{"version":3,"sources":["/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/horario/Horario.js"],"names":["Formik","Form","React","useState","BotonFormulario","horas","dias","horario","Bloques","props","seleccion","setSeleccion","seleccionar","estado","bloque","dia","hora","check","uncheck","Horas","i","length","push","Dias","map","Horario","checkHora","diaSeleccionado","horaSeleccionada","Object","keys","values","includes","console","log","JSON","stringify","uncheckHora","pop","mostrarHorario","registrarHorarioTutor","datos","accion"],"mappings":"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","sourcesContent":["import { Formik, Form } from 'formik';\nimport React, { useState } from 'react';\nimport BotonFormulario from '../botones/BotonFormulario';\nimport './Horario.css';\n\nconst horas = [\n    '8:00 AM',\n    '9:00 AM',\n    '10:00 AM',\n    '11:00 AM',\n    '12:00 PM',\n    '13:00 PM',\n    '14:00 PM',\n    '15:00 PM',\n    '16:00 PM',\n    '17:00 PM',\n    '18:00 PM',\n    '19:00 PM',\n    '20:00 PM',\n    '21:00 PM',\n    '22:00 PM',\n    '23:00 PM'\n] \n\nconst dias = ['Horario', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\n\nconst horario = \n    [\n        {\n            \"Lunes\": []\n        },\n        {\n            \"Martes\": []\n        },\n        {\n            \"Miércoles\": []\n        },\n        {\n            \"Jueves\": []\n        },\n        {\n            \"Viernes\": []\n        },\n        {\n            \"Sábado\": []\n        },\n        {\n            \"Domingo\": []\n        }\n    ]\n\nconst Bloques = (props) => {\n    const[seleccion, setSeleccion] = useState(false);\n\n    const seleccionar = (estado) => {\n        setSeleccion(!seleccion)\n    };\n\n    let bloque = '';\n        {\n            (props.dia === \"horario\") ?\n            bloque = <div hora={props.hora}>{props.hora}</div>\n            :\n            bloque = <div className={seleccion ? 'grid-bloque-clicked' : 'grid-bloque'} >\n                        <div hora={props.hora} \n                            dia={props.dia} \n                            estado={seleccion ? 'true':'false'} \n                            onClick={seleccionar}>\n                                {seleccion ? \n                                    <p>&#9745;</p>\n                                    : \n                                    <p>&#9744;</p>\n                                }\n                                {seleccion ?\n                                    props.check(props.dia, props.hora)\n                                    :\n                                    props.uncheck(props.dia, props.hora)\n                                }\n                        </div>\n                     </div>\n        }\n    return(\n        <>{bloque}</>\n    );\n}\n\nconst Horas = (props) => {\n    let bloque = [];\n    for(let i = 0; i < horas.length; i++){\n        {\n            (props.dia === \"horario\") ?\n            bloque.push(<Bloques hora={horas[i]} dia={props.dia} key={i}/>)\n            :\n            bloque.push(<Bloques hora={horas[i]} dia={props.dia} key={i} check={props.check} uncheck={props.uncheck}/>)\n        }\n    }\n    return(\n        <>{bloque}</>\n    );\n}\n\nconst Dias = (props) => {\n    let horario = dias.map((dias) => \n        <div className='grid-dias'>\n                {dias}\n                {\n                    (dias === 'Horario') ? \n                        <Horas dia=\"horario\" />\n                    : \n                        <Horas dia={dias} check={props.check} uncheck={props.uncheck}/>\n                }\n        </div>\n        )\n\n    return(\n        <div className='grid-horario'>\n            {horario}\n        </div>\n    );\n}\n\nconst Horario = (props) => {\n\n    /*Agrega, al arreglo, la hora al dia que se selecciona*/\n    const checkHora = (diaSeleccionado, horaSeleccionada) => {\n        horario.map(\n            (dia) => \n                {\n                    if(Object.keys(dia)[0] === diaSeleccionado){\n                        if(!Object.values(dia)[0].includes(horaSeleccionada)){\n                            Object.values(dia)[0].push(horaSeleccionada)\n                        }\n                    }\n                }\n            )\n        return(\n            <>{console.log(JSON.stringify(horario))}</>\n        );\n    }\n\n    /*Quita, del arreglo, la hora del dia que se selecciona*/\n    const uncheckHora = (diaSeleccionado, horaSeleccionada) => {\n        horario.map(\n            (dia) => \n                {\n                    if(Object.keys(dia)[0] === diaSeleccionado){\n                        if(Object.values(dia)[0].includes(horaSeleccionada)){\n                            Object.values(dia)[0].pop(horaSeleccionada)\n                        }\n                    }\n                }\n            )\n        return(\n            <>{console.log(JSON.stringify(horario))}</>\n        );\n    }\n\n    /*Muestra el horario con su className*/\n    const mostrarHorario = () => {\n        return(\n            <div className=\"grid-card\">\n                <Dias check={checkHora} uncheck={uncheckHora} horario={horario}/>\n            </div>\n        );\n    }\n\n    const registrarHorarioTutor = () => {\n        return(\n            <Formik\n                initialValues={{\n                    datos: props.datos,\n                    horario: horario\n                }}\n                onSubmit={values => console.log(JSON.stringify(values, null, 4))}\n            >\n                <Form>\n                    <BotonFormulario className=\"boton-siguiente\" name=\"boton\" value=\"Registrar\" />\n                </Form>\n            </Formik>\n        );\n    }\n\n    return(\n        <div>\n            {props.accion === \"registrar\" && \n            <div>\n                {mostrarHorario()}\n                {registrarHorarioTutor()}\n            </div>\n            }\n        </div>\n    );\n}\n\nexport default Horario;"]},"metadata":{},"sourceType":"module"}