{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { MS_PER_DAY, MS_PER_HOUR } from '@progress/kendo-date-math';\nimport * as limitations from './limitations';\nimport { setDayOfWeek, normalizeDayIndex, hasModifiers } from './utils';\nvar RULE_NAMES = ['byMonth', 'byWeekNumber', 'byYearDay', 'byMonthDay', 'byWeekDay', 'byHour', 'byMinute', 'bySecond'];\nvar RULE_NAMES_LENGTH = RULE_NAMES.length;\n\nvar intervalExcess = function (diff, interval) {\n  var excess;\n\n  if (diff !== 0 && diff < interval) {\n    excess = interval - diff;\n  } else {\n    excess = diff % interval;\n\n    if (excess) {\n      excess = interval - excess;\n    }\n  }\n\n  return excess;\n};\n\nvar addTime = function (date, time) {\n  date.setTime(date.getTime() + time);\n};\n/** @hidden */\n\n\nvar BaseFrequency =\n/** @class */\nfunction () {\n  function BaseFrequency() {}\n\n  BaseFrequency.prototype.next = function (date, rule) {\n    var startTime = rule._startTime;\n    var minutes, seconds;\n\n    if (rule.bySecond) {\n      seconds = date.getUTCSeconds() + 1;\n      date.setUTCSeconds(seconds);\n      startTime.setUTCSeconds(seconds);\n    } else if (rule.byMinute) {\n      minutes = date.getUTCMinutes() + 1;\n      date.setUTCMinutes(minutes);\n      startTime.setUTCMinutes(minutes);\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  BaseFrequency.prototype.normalize = function (options) {\n    var rule = options.rule;\n\n    if (options.idx === 4 && rule.byHour) {\n      rule._startTime.setUTCHours(0);\n\n      this._hour(options.date, rule);\n    }\n  };\n\n  BaseFrequency.prototype.limit = function (date, end, rule) {\n    var interval = rule.interval || 1;\n    var idx;\n\n    while (date <= end) {\n      var modified = undefined;\n      var firstRule = undefined;\n      var day = date.getUTCDate();\n\n      for (idx = 0; idx < RULE_NAMES_LENGTH; idx++) {\n        var ruleName = RULE_NAMES[idx];\n\n        if (rule[ruleName]) {\n          modified = limitations[ruleName](date, end, rule);\n\n          if (firstRule !== undefined && modified) {\n            break;\n          } else {\n            firstRule = modified;\n          }\n        }\n\n        if (modified) {\n          this.normalize({\n            date: date,\n            rule: rule,\n            day: day,\n            idx: idx\n          });\n        }\n      }\n\n      if ((interval === 1 || !this.interval(rule, date)) && idx === RULE_NAMES_LENGTH) {\n        break;\n      }\n    }\n  };\n\n  BaseFrequency.prototype.interval = function (rule, current) {\n    var start = rule._startPeriod.toUTCDate();\n\n    var hours = current.getUTCHours();\n    var weekStart = rule.weekStart;\n    var interval = rule.interval;\n    var frequency = rule.freq;\n    var date = new Date(current);\n    var modified = false;\n    var excess = 0;\n    var month = 0;\n    var day = 1;\n    var diff;\n    var startTimeHours;\n\n    if (frequency === 'hourly') {\n      startTimeHours = rule._startTime.getUTCHours();\n      date = date.getTime();\n\n      if (hours !== startTimeHours) {\n        date += (startTimeHours - hours) * MS_PER_HOUR;\n      }\n\n      date -= start.getTime();\n      diff = Math.floor(date / MS_PER_HOUR);\n      excess = intervalExcess(diff, interval);\n\n      if (excess !== 0) {\n        this._hour(current, rule, excess);\n\n        modified = true;\n      }\n    } else if (frequency === 'daily') {\n      addTime(date, -start);\n      diff = Math.round(date / MS_PER_DAY);\n      excess = intervalExcess(diff, interval);\n\n      if (excess !== 0) {\n        this._date(current, rule, excess);\n\n        modified = true;\n      }\n    } else if (frequency === 'weekly') {\n      excess = this.getNumberOfWeeksBetweenDates(start, current);\n      var normalizedCurrentIndex = normalizeDayIndex(current.getUTCDay(), weekStart);\n      var normalizedStartIndex = normalizeDayIndex(start.getUTCDay(), weekStart);\n\n      if (normalizedCurrentIndex < normalizedStartIndex) {\n        excess += 1;\n      }\n\n      excess = intervalExcess(excess, interval);\n\n      if (excess !== 0) {\n        setDayOfWeek(current, rule.weekStart, -1);\n        current.setUTCDate(current.getUTCDate() + excess * 7);\n        modified = true;\n      }\n    } else if (frequency === 'monthly') {\n      diff = current.getUTCFullYear() - start.getUTCFullYear();\n      diff = current.getUTCMonth() - start.getUTCMonth() + diff * 12;\n      excess = intervalExcess(diff, interval);\n\n      if (excess !== 0) {\n        day = hasModifiers(rule) ? 1 : current.getDate();\n        current.setUTCFullYear(current.getUTCFullYear(), current.getUTCMonth() + excess, day);\n        modified = true;\n      }\n    } else if (frequency === 'yearly') {\n      diff = current.getUTCFullYear() - start.getUTCFullYear();\n      excess = intervalExcess(diff, interval);\n\n      if (!rule.byMonth) {\n        month = current.getUTCMonth();\n      }\n\n      if (!rule.byYearDay && !rule.byMonthDay && !rule.byWeekDay) {\n        day = current.getUTCDate();\n      }\n\n      if (excess !== 0) {\n        current.setUTCFullYear(current.getUTCFullYear() + excess, month, day);\n        modified = true;\n      }\n    }\n\n    return modified;\n  };\n\n  BaseFrequency.prototype._hour = function (date, rule, interval) {\n    var startTime = rule._startTime;\n    var hours = startTime.getUTCHours();\n\n    if (interval) {\n      hours += interval;\n    }\n\n    date.setUTCHours(hours);\n    hours = hours % 24;\n    startTime.setUTCHours(hours);\n  };\n\n  BaseFrequency.prototype._date = function (date, rule, interval) {\n    date.setUTCDate(date.getUTCDate() + interval);\n  };\n\n  BaseFrequency.prototype.getNumberOfWeeksBetweenDates = function (first, second) {\n    var weeks = (second.getTime() - first.getTime()) / 604800000;\n    var exactWeeks = Math.floor(weeks); // DST change occurrs in week?\n\n    if (weeks - exactWeeks > 0.99) {\n      exactWeeks = Math.round(weeks);\n    }\n\n    return exactWeeks;\n  };\n\n  return BaseFrequency;\n}();\n\nexport { BaseFrequency };\n/** @hidden */\n\nvar HourlyFrequency =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(HourlyFrequency, _super);\n\n  function HourlyFrequency() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  HourlyFrequency.prototype.next = function (date, rule) {\n    if (!BaseFrequency.prototype.next.call(this, date, rule)) {\n      this._hour(date, rule, 1);\n    }\n\n    return false;\n  };\n\n  HourlyFrequency.prototype.normalize = function (options) {\n    var rule = options.rule;\n\n    if (options.idx === 4) {\n      rule._startTime.setUTCHours(0);\n\n      this._hour(options.date, rule);\n    }\n  };\n\n  return HourlyFrequency;\n}(BaseFrequency);\n\nexport { HourlyFrequency };\n/** @hidden */\n\nvar DailyFrequency =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(DailyFrequency, _super);\n\n  function DailyFrequency() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DailyFrequency.prototype.next = function (date, rule) {\n    if (!BaseFrequency.prototype.next.call(this, date, rule)) {\n      this[rule.byHour ? '_hour' : '_date'](date, rule, 1);\n    }\n\n    return false;\n  };\n\n  return DailyFrequency;\n}(BaseFrequency);\n\nexport { DailyFrequency };\n/** @hidden */\n\nvar WeeklyFrequency =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(WeeklyFrequency, _super);\n\n  function WeeklyFrequency() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WeeklyFrequency.prototype.setup = function (rule, eventStartDate) {\n    if (!rule.byWeekDay) {\n      rule.byWeekDay = [{\n        day: eventStartDate.getUTCDay(),\n        offset: 0\n      }];\n    }\n  };\n\n  return WeeklyFrequency;\n}(DailyFrequency);\n\nexport { WeeklyFrequency };\n/** @hidden */\n\nvar MonthlyFrequency =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MonthlyFrequency, _super);\n\n  function MonthlyFrequency() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MonthlyFrequency.prototype.next = function (date, rule) {\n    var day;\n\n    if (!BaseFrequency.prototype.next.call(this, date, rule)) {\n      if (rule.byHour) {\n        this._hour(date, rule, 1);\n      } else if (rule.byMonthDay || rule.byWeekDay || rule.byYearDay || rule.byWeekNumber) {\n        this._date(date, rule, 1);\n      } else {\n        day = date.getUTCDate();\n        date.setUTCMonth(date.getUTCMonth() + 1);\n\n        while (date.getUTCDate() !== day) {\n          date.setUTCDate(day);\n        }\n\n        this._hour(date, rule);\n      }\n    }\n\n    return false;\n  };\n\n  MonthlyFrequency.prototype.normalize = function (options) {\n    var rule = options.rule,\n        date = options.date;\n\n    if (options.idx === 0 && !rule.byMonthDay && !rule.byWeekDay) {\n      date.setUTCDate(options.day);\n    } else {\n      _super.prototype.normalize.call(this, options);\n    }\n  };\n\n  MonthlyFrequency.prototype.setup = function (rule, eventStartDate, date) {\n    if (!rule.byMonthDay && !rule.byWeekDay) {\n      date.setUTCDate(eventStartDate.getUTCDate());\n    }\n  };\n\n  return MonthlyFrequency;\n}(BaseFrequency);\n\nexport { MonthlyFrequency };\n/** @hidden */\n\nvar YearlyFrequency =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(YearlyFrequency, _super);\n\n  function YearlyFrequency() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  YearlyFrequency.prototype.next = function (date, rule) {\n    var day;\n\n    if (!BaseFrequency.prototype.next.call(this, date, rule)) {\n      if (rule.byHour) {\n        this._hour(date, rule, 1);\n      } else if (rule.byMonthDay || rule.byWeekDay || rule.byYearDay || rule.byWeekNumber) {\n        this._date(date, rule, 1);\n      } else if (rule.byMonth) {\n        day = date.getUTCDate();\n        date.setUTCMonth(date.getUTCMonth() + 1);\n\n        while (date.getUTCDate() !== day) {\n          date.setUTCDate(day);\n        }\n\n        this._hour(date, rule);\n      } else {\n        date.setUTCFullYear(date.getUTCFullYear() + 1);\n\n        this._hour(date, rule);\n      }\n    }\n\n    return false;\n  };\n\n  YearlyFrequency.prototype.setup = function () {// No-op\n  };\n\n  return YearlyFrequency;\n}(MonthlyFrequency);\n\nexport { YearlyFrequency };","map":{"version":3,"sources":["/home/asmith/taller/proyecto1/proyecto-taller/client/node_modules/@progress/kendo-recurrence/dist/es/frequencies.js"],"names":["tslib_1","MS_PER_DAY","MS_PER_HOUR","limitations","setDayOfWeek","normalizeDayIndex","hasModifiers","RULE_NAMES","RULE_NAMES_LENGTH","length","intervalExcess","diff","interval","excess","addTime","date","time","setTime","getTime","BaseFrequency","prototype","next","rule","startTime","_startTime","minutes","seconds","bySecond","getUTCSeconds","setUTCSeconds","byMinute","getUTCMinutes","setUTCMinutes","normalize","options","idx","byHour","setUTCHours","_hour","limit","end","modified","undefined","firstRule","day","getUTCDate","ruleName","current","start","_startPeriod","toUTCDate","hours","getUTCHours","weekStart","frequency","freq","Date","month","startTimeHours","Math","floor","round","_date","getNumberOfWeeksBetweenDates","normalizedCurrentIndex","getUTCDay","normalizedStartIndex","setUTCDate","getUTCFullYear","getUTCMonth","getDate","setUTCFullYear","byMonth","byYearDay","byMonthDay","byWeekDay","first","second","weeks","exactWeeks","HourlyFrequency","_super","__extends","apply","arguments","call","DailyFrequency","WeeklyFrequency","setup","eventStartDate","offset","MonthlyFrequency","byWeekNumber","setUTCMonth","YearlyFrequency"],"mappings":"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","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { MS_PER_DAY, MS_PER_HOUR } from '@progress/kendo-date-math';\nimport * as limitations from './limitations';\nimport { setDayOfWeek, normalizeDayIndex, hasModifiers } from './utils';\nvar RULE_NAMES = ['byMonth', 'byWeekNumber', 'byYearDay', 'byMonthDay', 'byWeekDay', 'byHour', 'byMinute', 'bySecond'];\nvar RULE_NAMES_LENGTH = RULE_NAMES.length;\nvar intervalExcess = function (diff, interval) {\n    var excess;\n    if (diff !== 0 && diff < interval) {\n        excess = interval - diff;\n    }\n    else {\n        excess = diff % interval;\n        if (excess) {\n            excess = interval - excess;\n        }\n    }\n    return excess;\n};\nvar addTime = function (date, time) {\n    date.setTime(date.getTime() + time);\n};\n/** @hidden */\nvar BaseFrequency = /** @class */ (function () {\n    function BaseFrequency() {\n    }\n    BaseFrequency.prototype.next = function (date, rule) {\n        var startTime = rule._startTime;\n        var minutes, seconds;\n        if (rule.bySecond) {\n            seconds = date.getUTCSeconds() + 1;\n            date.setUTCSeconds(seconds);\n            startTime.setUTCSeconds(seconds);\n        }\n        else if (rule.byMinute) {\n            minutes = date.getUTCMinutes() + 1;\n            date.setUTCMinutes(minutes);\n            startTime.setUTCMinutes(minutes);\n        }\n        else {\n            return false;\n        }\n        return true;\n    };\n    BaseFrequency.prototype.normalize = function (options) {\n        var rule = options.rule;\n        if (options.idx === 4 && rule.byHour) {\n            rule._startTime.setUTCHours(0);\n            this._hour(options.date, rule);\n        }\n    };\n    BaseFrequency.prototype.limit = function (date, end, rule) {\n        var interval = rule.interval || 1;\n        var idx;\n        while (date <= end) {\n            var modified = undefined;\n            var firstRule = undefined;\n            var day = date.getUTCDate();\n            for (idx = 0; idx < RULE_NAMES_LENGTH; idx++) {\n                var ruleName = RULE_NAMES[idx];\n                if (rule[ruleName]) {\n                    modified = limitations[ruleName](date, end, rule);\n                    if (firstRule !== undefined && modified) {\n                        break;\n                    }\n                    else {\n                        firstRule = modified;\n                    }\n                }\n                if (modified) {\n                    this.normalize({ date: date, rule: rule, day: day, idx: idx });\n                }\n            }\n            if ((interval === 1 || !this.interval(rule, date)) && idx === RULE_NAMES_LENGTH) {\n                break;\n            }\n        }\n    };\n    BaseFrequency.prototype.interval = function (rule, current) {\n        var start = rule._startPeriod.toUTCDate();\n        var hours = current.getUTCHours();\n        var weekStart = rule.weekStart;\n        var interval = rule.interval;\n        var frequency = rule.freq;\n        var date = new Date(current);\n        var modified = false;\n        var excess = 0;\n        var month = 0;\n        var day = 1;\n        var diff;\n        var startTimeHours;\n        if (frequency === 'hourly') {\n            startTimeHours = rule._startTime.getUTCHours();\n            date = date.getTime();\n            if (hours !== startTimeHours) {\n                date += (startTimeHours - hours) * MS_PER_HOUR;\n            }\n            date -= start.getTime();\n            diff = Math.floor(date / MS_PER_HOUR);\n            excess = intervalExcess(diff, interval);\n            if (excess !== 0) {\n                this._hour(current, rule, excess);\n                modified = true;\n            }\n        }\n        else if (frequency === 'daily') {\n            addTime(date, -start);\n            diff = Math.round(date / MS_PER_DAY);\n            excess = intervalExcess(diff, interval);\n            if (excess !== 0) {\n                this._date(current, rule, excess);\n                modified = true;\n            }\n        }\n        else if (frequency === 'weekly') {\n            excess = this.getNumberOfWeeksBetweenDates(start, current);\n            var normalizedCurrentIndex = normalizeDayIndex(current.getUTCDay(), weekStart);\n            var normalizedStartIndex = normalizeDayIndex(start.getUTCDay(), weekStart);\n            if (normalizedCurrentIndex < normalizedStartIndex) {\n                excess += 1;\n            }\n            excess = intervalExcess(excess, interval);\n            if (excess !== 0) {\n                setDayOfWeek(current, rule.weekStart, -1);\n                current.setUTCDate(current.getUTCDate() + (excess * 7));\n                modified = true;\n            }\n        }\n        else if (frequency === 'monthly') {\n            diff = current.getUTCFullYear() - start.getUTCFullYear();\n            diff = current.getUTCMonth() - start.getUTCMonth() + (diff * 12);\n            excess = intervalExcess(diff, interval);\n            if (excess !== 0) {\n                day = hasModifiers(rule) ? 1 : current.getDate();\n                current.setUTCFullYear(current.getUTCFullYear(), current.getUTCMonth() + excess, day);\n                modified = true;\n            }\n        }\n        else if (frequency === 'yearly') {\n            diff = current.getUTCFullYear() - start.getUTCFullYear();\n            excess = intervalExcess(diff, interval);\n            if (!rule.byMonth) {\n                month = current.getUTCMonth();\n            }\n            if (!rule.byYearDay && !rule.byMonthDay && !rule.byWeekDay) {\n                day = current.getUTCDate();\n            }\n            if (excess !== 0) {\n                current.setUTCFullYear(current.getUTCFullYear() + excess, month, day);\n                modified = true;\n            }\n        }\n        return modified;\n    };\n    BaseFrequency.prototype._hour = function (date, rule, interval) {\n        var startTime = rule._startTime;\n        var hours = startTime.getUTCHours();\n        if (interval) {\n            hours += interval;\n        }\n        date.setUTCHours(hours);\n        hours = hours % 24;\n        startTime.setUTCHours(hours);\n    };\n    BaseFrequency.prototype._date = function (date, rule, interval) {\n        date.setUTCDate(date.getUTCDate() + interval);\n    };\n    BaseFrequency.prototype.getNumberOfWeeksBetweenDates = function (first, second) {\n        var weeks = (second.getTime() - first.getTime()) / 604800000;\n        var exactWeeks = Math.floor(weeks);\n        // DST change occurrs in week?\n        if (weeks - exactWeeks > 0.99) {\n            exactWeeks = Math.round(weeks);\n        }\n        return exactWeeks;\n    };\n    return BaseFrequency;\n}());\nexport { BaseFrequency };\n/** @hidden */\nvar HourlyFrequency = /** @class */ (function (_super) {\n    tslib_1.__extends(HourlyFrequency, _super);\n    function HourlyFrequency() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HourlyFrequency.prototype.next = function (date, rule) {\n        if (!BaseFrequency.prototype.next.call(this, date, rule)) {\n            this._hour(date, rule, 1);\n        }\n        return false;\n    };\n    HourlyFrequency.prototype.normalize = function (options) {\n        var rule = options.rule;\n        if (options.idx === 4) {\n            rule._startTime.setUTCHours(0);\n            this._hour(options.date, rule);\n        }\n    };\n    return HourlyFrequency;\n}(BaseFrequency));\nexport { HourlyFrequency };\n/** @hidden */\nvar DailyFrequency = /** @class */ (function (_super) {\n    tslib_1.__extends(DailyFrequency, _super);\n    function DailyFrequency() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DailyFrequency.prototype.next = function (date, rule) {\n        if (!BaseFrequency.prototype.next.call(this, date, rule)) {\n            this[rule.byHour ? '_hour' : '_date'](date, rule, 1);\n        }\n        return false;\n    };\n    return DailyFrequency;\n}(BaseFrequency));\nexport { DailyFrequency };\n/** @hidden */\nvar WeeklyFrequency = /** @class */ (function (_super) {\n    tslib_1.__extends(WeeklyFrequency, _super);\n    function WeeklyFrequency() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WeeklyFrequency.prototype.setup = function (rule, eventStartDate) {\n        if (!rule.byWeekDay) {\n            rule.byWeekDay = [{\n                    day: eventStartDate.getUTCDay(),\n                    offset: 0\n                }];\n        }\n    };\n    return WeeklyFrequency;\n}(DailyFrequency));\nexport { WeeklyFrequency };\n/** @hidden */\nvar MonthlyFrequency = /** @class */ (function (_super) {\n    tslib_1.__extends(MonthlyFrequency, _super);\n    function MonthlyFrequency() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MonthlyFrequency.prototype.next = function (date, rule) {\n        var day;\n        if (!BaseFrequency.prototype.next.call(this, date, rule)) {\n            if (rule.byHour) {\n                this._hour(date, rule, 1);\n            }\n            else if (rule.byMonthDay || rule.byWeekDay || rule.byYearDay || rule.byWeekNumber) {\n                this._date(date, rule, 1);\n            }\n            else {\n                day = date.getUTCDate();\n                date.setUTCMonth(date.getUTCMonth() + 1);\n                while (date.getUTCDate() !== day) {\n                    date.setUTCDate(day);\n                }\n                this._hour(date, rule);\n            }\n        }\n        return false;\n    };\n    MonthlyFrequency.prototype.normalize = function (options) {\n        var rule = options.rule, date = options.date;\n        if (options.idx === 0 && !rule.byMonthDay && !rule.byWeekDay) {\n            date.setUTCDate(options.day);\n        }\n        else {\n            _super.prototype.normalize.call(this, options);\n        }\n    };\n    MonthlyFrequency.prototype.setup = function (rule, eventStartDate, date) {\n        if (!rule.byMonthDay && !rule.byWeekDay) {\n            date.setUTCDate(eventStartDate.getUTCDate());\n        }\n    };\n    return MonthlyFrequency;\n}(BaseFrequency));\nexport { MonthlyFrequency };\n/** @hidden */\nvar YearlyFrequency = /** @class */ (function (_super) {\n    tslib_1.__extends(YearlyFrequency, _super);\n    function YearlyFrequency() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    YearlyFrequency.prototype.next = function (date, rule) {\n        var day;\n        if (!BaseFrequency.prototype.next.call(this, date, rule)) {\n            if (rule.byHour) {\n                this._hour(date, rule, 1);\n            }\n            else if (rule.byMonthDay || rule.byWeekDay || rule.byYearDay || rule.byWeekNumber) {\n                this._date(date, rule, 1);\n            }\n            else if (rule.byMonth) {\n                day = date.getUTCDate();\n                date.setUTCMonth(date.getUTCMonth() + 1);\n                while (date.getUTCDate() !== day) {\n                    date.setUTCDate(day);\n                }\n                this._hour(date, rule);\n            }\n            else {\n                date.setUTCFullYear(date.getUTCFullYear() + 1);\n                this._hour(date, rule);\n            }\n        }\n        return false;\n    };\n    YearlyFrequency.prototype.setup = function () {\n        // No-op\n    };\n    return YearlyFrequency;\n}(MonthlyFrequency));\nexport { YearlyFrequency };\n"]},"metadata":{},"sourceType":"module"}