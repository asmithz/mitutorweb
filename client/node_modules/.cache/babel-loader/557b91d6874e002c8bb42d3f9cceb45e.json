{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Keys, dispatchEvent, guid } from '@progress/kendo-react-common';\nimport nav from './utils/getItemIdUponKeyboardNavigation';\nimport { resolveItemId, isEnabledAndAllParentsEnabled, hasChildren } from './utils/itemUtils';\nimport { TreeViewItem } from './TreeViewItem';\nimport { ZERO_LEVEL_ZERO_NODE_ID, getItemById } from './utils/itemIdUtils';\nimport FieldsService from './utils/FieldsService';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from './package-metadata';\nimport { CHECK_FIELD, CHECK_INDETERMINATE_FIELD, CHILDREN_FIELD, DISABLED_FIELD, EXPAND_FIELD, HAS_CHILDREN_FIELD, SELECT_FIELD, TEXT_FIELD } from './utils/consts';\n/**\n * Represents the [KendoReact TreeView component]({% slug overview_treeview %}).\n *\n * @example\n * ```jsx\n * const data = [{\n *     text: 'Furniture', expanded: true, items: [\n *         { text: 'Tables & Chairs' }, { text: 'Sofas' }, { text: 'Occasional Furniture' }]\n * }, {\n *     text: 'Decor', expanded: true, items: [\n *         { text: 'Bed Linen' }, { text: 'Curtains & Blinds' }, { text: 'Carpets' }]\n * }];\n * class App extends React.Component {\n *     render() {\n *         return <TreeView data={data} />;\n *     }\n * }\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nvar TreeView =\n/** @class */\nfunction (_super) {\n  __extends(TreeView, _super);\n\n  function TreeView(props) {\n    var _this = _super.call(this, props) || this;\n    /**\n     * @hidden\n     */\n\n\n    _this.state = {\n      focusedItemId: undefined,\n      focusedItemPublicId: undefined,\n      tabbableItemId: ZERO_LEVEL_ZERO_NODE_ID\n    }; // When there is a change in state.focusedItemId, calling focus() on the dom element of the focused item\n    // is most often not needed, because the browser focuses the element on its own.\n    // https://github.com/telerik/kendo-react/issues/190\n\n    _this.allowExplicitFocus = false;\n    _this.treeGuid = guid();\n    _this._element = null;\n\n    _this.onFocusDomElNeeded = function (domItem) {\n      if (_this.allowExplicitFocus) {\n        _this.focusDomItem(domItem);\n      }\n    };\n\n    _this.onCheckChange = function (event, item, itemId) {\n      _this.setFocus(itemId);\n\n      _this.dispatchCheckChange(event, item, itemId);\n    };\n\n    _this.onExpandChange = function (event, item, itemId) {\n      _this.setFocus(itemId);\n\n      _this.dispatchExpandChange(event, item, itemId);\n    };\n\n    _this.onPress = function (_event, item, itemId) {\n      if (_this.props.onItemDragStart) {\n        _this.props.onItemDragStart.call(undefined, {\n          target: _this,\n          item: item,\n          itemHierarchicalIndex: itemId\n        });\n      }\n    };\n\n    _this.onDrag = function (event, item, itemId) {\n      var pageX = event.pageX,\n          pageY = event.pageY,\n          clientX = event.clientX,\n          clientY = event.clientY;\n\n      if (_this.props.onItemDragOver) {\n        _this.props.onItemDragOver.call(undefined, {\n          target: _this,\n          item: item,\n          itemHierarchicalIndex: itemId,\n          pageX: pageX,\n          pageY: pageY,\n          clientX: clientX,\n          clientY: clientY\n        });\n      }\n    };\n\n    _this.onRelease = function (event, item, itemId) {\n      var pageX = event.pageX,\n          pageY = event.pageY,\n          clientX = event.clientX,\n          clientY = event.clientY;\n\n      if (_this.props.onItemDragEnd) {\n        _this.props.onItemDragEnd.call(undefined, {\n          target: _this,\n          item: item,\n          itemHierarchicalIndex: itemId,\n          pageX: pageX,\n          pageY: pageY,\n          clientX: clientX,\n          clientY: clientY\n        });\n      }\n    };\n\n    _this.onItemClick = function (event, item, itemId) {\n      _this.setFocus(itemId);\n\n      _this.dispatchItemClick(event, item, itemId);\n    };\n\n    _this.onFocus = function () {\n      clearTimeout(_this.blurRequest);\n\n      if (_this.state.focusedItemId === undefined && _this.data.length) {\n        _this.setFocus(_this.state.tabbableItemId);\n      }\n    };\n\n    _this.onBlur = function () {\n      clearTimeout(_this.blurRequest);\n      _this.blurRequest = window.setTimeout(function () {\n        return _this.setFocus(undefined);\n      }, 0);\n    };\n\n    _this.onKeyDown = function (event) {\n      var focusedItem = _this.getFocusedItem();\n\n      if (focusedItem) {\n        var newItemId = nav(focusedItem, _this.state.focusedItemId, _this.data, event.keyCode, _this.fieldsSvc);\n\n        if (newItemId !== _this.state.focusedItemId) {\n          // This disables the auto-scroll. The scroll is achieved via item focusing.\n          event.preventDefault();\n          _this.allowExplicitFocus = true;\n\n          _this.setFocus(newItemId);\n        }\n\n        _this.dispatchEventsOnKeyDown(event, focusedItem);\n      }\n    };\n\n    validatePackage(packageMetadata);\n    return _this;\n  }\n\n  Object.defineProperty(TreeView.prototype, \"element\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  TreeView.prototype.render = function () {\n    var _this = this;\n\n    this.fieldsSvc = new FieldsService(this.props);\n    return React.createElement(\"div\", {\n      className: 'k-widget k-treeview' + (this.props.className ? ' ' + this.props.className : ''),\n      onKeyDown: this.onKeyDown,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      role: \"tree\",\n      \"aria-multiselectable\": this.ariaMultiSelectable ? true : undefined,\n      \"aria-label\": this.props['aria-label'],\n      \"aria-labelledby\": this.props['aria-labelledby'],\n      ref: function (element) {\n        return _this._element = element;\n      },\n      tabIndex: this.props.tabIndex\n    }, React.createElement(\"ul\", {\n      className: \"k-treeview-lines k-group\",\n      role: \"group\"\n    }, this.data.map(function (item, index) {\n      return React.createElement(TreeViewItem, {\n        item: item,\n        itemId: index.toString(),\n        treeGuid: _this.treeGuid,\n        animate: _this.props.animate,\n        focusedItemId: _this.state.focusedItemId,\n        tabbableItemId: _this.state.tabbableItemId,\n        fieldsService: _this.fieldsSvc,\n        itemUI: _this.props.item,\n        checkboxes: _this.props.checkboxes,\n        ariaMultiSelectable: _this.ariaMultiSelectable,\n        onItemClick: _this.onItemClick,\n        onFocusDomElNeeded: _this.onFocusDomElNeeded,\n        draggable: _this.props.draggable,\n        onPress: _this.onPress,\n        onDrag: _this.onDrag,\n        onRelease: _this.onRelease,\n        expandIcons: _this.props.expandIcons,\n        onExpandChange: _this.onExpandChange,\n        onCheckChange: _this.onCheckChange,\n        key: index\n      });\n    })));\n  };\n  /**\n   * @hidden\n   */\n\n\n  TreeView.prototype.componentDidUpdate = function () {\n    this.allowExplicitFocus = false;\n    this.refocusDueToFocusIdField();\n  };\n\n  TreeView.prototype.dispatchEventsOnKeyDown = function (event, focusedItem) {\n    var _this = this; // isEnabled is the most expensive op and that is why is left last.\n\n\n    var isEnabled = function () {\n      return isEnabledAndAllParentsEnabled(_this.state.focusedItemId, _this.data, _this.fieldsSvc);\n    };\n\n    if (event.keyCode === Keys.left && this.fieldsSvc.expanded(focusedItem) && isEnabled()) {\n      this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);\n    } else if (event.keyCode === Keys.right && !this.fieldsSvc.expanded(focusedItem) && (this.fieldsSvc.hasChildren(focusedItem) || hasChildren(focusedItem, this.props.childrenField)) && isEnabled()) {\n      this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);\n    } else if (event.keyCode === Keys.enter && isEnabled()) {\n      this.dispatchItemClick(event, focusedItem, this.state.focusedItemId);\n    } else if (event.keyCode === Keys.space && isEnabled()) {\n      // W/o preventDefault() long TreeViews gets incorrectly scrolled.\n      event.preventDefault();\n      this.dispatchCheckChange(event, focusedItem, this.state.focusedItemId);\n    }\n  };\n\n  TreeView.prototype.setFocus = function (focusedItemId) {\n    if (focusedItemId) {\n      if (this.fieldsSvc.focusIdField) {\n        var item = this.getItemById(focusedItemId);\n        this.setState({\n          focusedItemId: focusedItemId,\n          focusedItemPublicId: this.fieldsSvc.focusId(item)\n        });\n      } else {\n        this.setState({\n          focusedItemId: focusedItemId\n        });\n      }\n    } else {\n      this.setState(function (state) {\n        return {\n          focusedItemId: undefined,\n          focusedItemPublicId: undefined,\n          tabbableItemId: state.focusedItemId\n        };\n      });\n    }\n  };\n\n  TreeView.prototype.getFocusedItem = function () {\n    return this.state.focusedItemId ? this.getItemById(this.state.focusedItemId) : undefined;\n  };\n\n  TreeView.prototype.getItemById = function (itemId) {\n    return getItemById(itemId, this.data, this.props.childrenField || CHILDREN_FIELD);\n  };\n\n  TreeView.prototype.dispatchCheckChange = function (dispatchedEvent, item, itemId) {\n    dispatchEvent(this.props.onCheckChange, dispatchedEvent, this, {\n      item: item,\n      itemHierarchicalIndex: itemId\n    });\n  };\n\n  TreeView.prototype.dispatchExpandChange = function (dispatchedEvent, item, itemId) {\n    dispatchEvent(this.props.onExpandChange, dispatchedEvent, this, {\n      item: item,\n      itemHierarchicalIndex: itemId\n    });\n  };\n\n  TreeView.prototype.dispatchItemClick = function (dispatchedEvent, item, itemId) {\n    dispatchEvent(this.props.onItemClick, dispatchedEvent, this, {\n      item: item,\n      itemHierarchicalIndex: itemId\n    });\n  };\n\n  TreeView.prototype.refocusDueToFocusIdField = function () {\n    if (this.fieldsSvc.focusIdField) {\n      var focusedItemPublicId = this.state.focusedItemPublicId;\n\n      if (focusedItemPublicId) {\n        var focusedItemId = this.props.getFocusHierarchicalIndex ? this.props.getFocusHierarchicalIndex(focusedItemPublicId) : resolveItemId(focusedItemPublicId, this.fieldsSvc.focusIdField, this.data, this.props.childrenField);\n\n        if (focusedItemId !== this.state.focusedItemId) {\n          this.allowExplicitFocus = true;\n          this.setState({\n            focusedItemId: focusedItemId\n          });\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(TreeView.prototype, \"ariaMultiSelectable\", {\n    get: function () {\n      return this.props['aria-multiselectable'] === true || this.props['aria-multiselectable'] === 'true';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TreeView.prototype, \"data\", {\n    get: function () {\n      return this.props.data || [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TreeView.prototype.focusDomItem = function (domItem) {\n    domItem.focus();\n  };\n\n  Object.defineProperty(TreeView.prototype, \"guid\", {\n    /**\n     * Returns the `guid` which is associated with the TreeView.\n     */\n    get: function () {\n      return this.treeGuid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  TreeView.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.any),\n    animate: PropTypes.bool,\n    tabIndex: PropTypes.number,\n    focusIdField: PropTypes.string,\n    getHierarchicalIndexById: PropTypes.func,\n    onExpandChange: PropTypes.func,\n    onItemClick: PropTypes.func,\n    expandField: PropTypes.string,\n    selectField: PropTypes.string,\n    childrenField: PropTypes.string,\n    hasChildrenField: PropTypes.string,\n    textField: PropTypes.string,\n    disableField: PropTypes.string,\n    item: PropTypes.any,\n    'aria-multiselectable': function (props, propName, componentName) {\n      if (props[propName] !== undefined && props[propName] !== true && props[propName] !== false && props[propName] !== 'true' && props[propName] !== 'false') {\n        return new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Validation failed.');\n      }\n\n      return null;\n    },\n    'aria-label': PropTypes.string,\n    'aria-labelledby': PropTypes.string\n  };\n  /**\n   * @hidden\n   */\n\n  TreeView.defaultProps = {\n    animate: true,\n    expandField: EXPAND_FIELD,\n    selectField: SELECT_FIELD,\n    hasChildrenField: HAS_CHILDREN_FIELD,\n    childrenField: CHILDREN_FIELD,\n    textField: TEXT_FIELD,\n    disableField: DISABLED_FIELD,\n    checkField: CHECK_FIELD,\n    checkIndeterminateField: CHECK_INDETERMINATE_FIELD\n  };\n  return TreeView;\n}(React.Component);\n\nexport default TreeView;","map":{"version":3,"sources":["/home/asmith/taller/proyecto1/proyecto-taller/client/node_modules/@progress/kendo-react-treeview/dist/es/TreeView.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","React","PropTypes","Keys","dispatchEvent","guid","nav","resolveItemId","isEnabledAndAllParentsEnabled","hasChildren","TreeViewItem","ZERO_LEVEL_ZERO_NODE_ID","getItemById","FieldsService","validatePackage","packageMetadata","CHECK_FIELD","CHECK_INDETERMINATE_FIELD","CHILDREN_FIELD","DISABLED_FIELD","EXPAND_FIELD","HAS_CHILDREN_FIELD","SELECT_FIELD","TEXT_FIELD","TreeView","_super","props","_this","call","state","focusedItemId","undefined","focusedItemPublicId","tabbableItemId","allowExplicitFocus","treeGuid","_element","onFocusDomElNeeded","domItem","focusDomItem","onCheckChange","event","item","itemId","setFocus","dispatchCheckChange","onExpandChange","dispatchExpandChange","onPress","_event","onItemDragStart","target","itemHierarchicalIndex","onDrag","pageX","pageY","clientX","clientY","onItemDragOver","onRelease","onItemDragEnd","onItemClick","dispatchItemClick","onFocus","clearTimeout","blurRequest","data","length","onBlur","window","setTimeout","onKeyDown","focusedItem","getFocusedItem","newItemId","keyCode","fieldsSvc","preventDefault","dispatchEventsOnKeyDown","defineProperty","get","enumerable","configurable","render","createElement","className","role","ariaMultiSelectable","ref","element","tabIndex","map","index","toString","animate","fieldsService","itemUI","checkboxes","draggable","expandIcons","key","componentDidUpdate","refocusDueToFocusIdField","isEnabled","left","expanded","right","childrenField","enter","space","focusIdField","setState","focusId","dispatchedEvent","getFocusHierarchicalIndex","focus","propTypes","arrayOf","any","bool","number","string","getHierarchicalIndexById","func","expandField","selectField","hasChildrenField","textField","disableField","propName","componentName","Error","defaultProps","checkField","checkIndeterminateField","Component"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Keys, dispatchEvent, guid } from '@progress/kendo-react-common';\nimport nav from './utils/getItemIdUponKeyboardNavigation';\nimport { resolveItemId, isEnabledAndAllParentsEnabled, hasChildren } from './utils/itemUtils';\nimport { TreeViewItem } from './TreeViewItem';\nimport { ZERO_LEVEL_ZERO_NODE_ID, getItemById } from './utils/itemIdUtils';\nimport FieldsService from './utils/FieldsService';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from './package-metadata';\nimport { CHECK_FIELD, CHECK_INDETERMINATE_FIELD, CHILDREN_FIELD, DISABLED_FIELD, EXPAND_FIELD, HAS_CHILDREN_FIELD, SELECT_FIELD, TEXT_FIELD } from './utils/consts';\n/**\n * Represents the [KendoReact TreeView component]({% slug overview_treeview %}).\n *\n * @example\n * ```jsx\n * const data = [{\n *     text: 'Furniture', expanded: true, items: [\n *         { text: 'Tables & Chairs' }, { text: 'Sofas' }, { text: 'Occasional Furniture' }]\n * }, {\n *     text: 'Decor', expanded: true, items: [\n *         { text: 'Bed Linen' }, { text: 'Curtains & Blinds' }, { text: 'Carpets' }]\n * }];\n * class App extends React.Component {\n *     render() {\n *         return <TreeView data={data} />;\n *     }\n * }\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nvar TreeView = /** @class */ (function (_super) {\n    __extends(TreeView, _super);\n    function TreeView(props) {\n        var _this = _super.call(this, props) || this;\n        /**\n         * @hidden\n         */\n        _this.state = { focusedItemId: undefined, focusedItemPublicId: undefined, tabbableItemId: ZERO_LEVEL_ZERO_NODE_ID };\n        // When there is a change in state.focusedItemId, calling focus() on the dom element of the focused item\n        // is most often not needed, because the browser focuses the element on its own.\n        // https://github.com/telerik/kendo-react/issues/190\n        _this.allowExplicitFocus = false;\n        _this.treeGuid = guid();\n        _this._element = null;\n        _this.onFocusDomElNeeded = function (domItem) {\n            if (_this.allowExplicitFocus) {\n                _this.focusDomItem(domItem);\n            }\n        };\n        _this.onCheckChange = function (event, item, itemId) {\n            _this.setFocus(itemId);\n            _this.dispatchCheckChange(event, item, itemId);\n        };\n        _this.onExpandChange = function (event, item, itemId) {\n            _this.setFocus(itemId);\n            _this.dispatchExpandChange(event, item, itemId);\n        };\n        _this.onPress = function (_event, item, itemId) {\n            if (_this.props.onItemDragStart) {\n                _this.props.onItemDragStart.call(undefined, { target: _this, item: item, itemHierarchicalIndex: itemId });\n            }\n        };\n        _this.onDrag = function (event, item, itemId) {\n            var pageX = event.pageX, pageY = event.pageY, clientX = event.clientX, clientY = event.clientY;\n            if (_this.props.onItemDragOver) {\n                _this.props.onItemDragOver.call(undefined, {\n                    target: _this,\n                    item: item,\n                    itemHierarchicalIndex: itemId,\n                    pageX: pageX,\n                    pageY: pageY,\n                    clientX: clientX,\n                    clientY: clientY\n                });\n            }\n        };\n        _this.onRelease = function (event, item, itemId) {\n            var pageX = event.pageX, pageY = event.pageY, clientX = event.clientX, clientY = event.clientY;\n            if (_this.props.onItemDragEnd) {\n                _this.props.onItemDragEnd.call(undefined, {\n                    target: _this,\n                    item: item,\n                    itemHierarchicalIndex: itemId,\n                    pageX: pageX,\n                    pageY: pageY,\n                    clientX: clientX,\n                    clientY: clientY\n                });\n            }\n        };\n        _this.onItemClick = function (event, item, itemId) {\n            _this.setFocus(itemId);\n            _this.dispatchItemClick(event, item, itemId);\n        };\n        _this.onFocus = function () {\n            clearTimeout(_this.blurRequest);\n            if (_this.state.focusedItemId === undefined && _this.data.length) {\n                _this.setFocus(_this.state.tabbableItemId);\n            }\n        };\n        _this.onBlur = function () {\n            clearTimeout(_this.blurRequest);\n            _this.blurRequest = window.setTimeout(function () { return _this.setFocus(undefined); }, 0);\n        };\n        _this.onKeyDown = function (event) {\n            var focusedItem = _this.getFocusedItem();\n            if (focusedItem) {\n                var newItemId = nav(focusedItem, _this.state.focusedItemId, _this.data, event.keyCode, _this.fieldsSvc);\n                if (newItemId !== _this.state.focusedItemId) {\n                    // This disables the auto-scroll. The scroll is achieved via item focusing.\n                    event.preventDefault();\n                    _this.allowExplicitFocus = true;\n                    _this.setFocus(newItemId);\n                }\n                _this.dispatchEventsOnKeyDown(event, focusedItem);\n            }\n        };\n        validatePackage(packageMetadata);\n        return _this;\n    }\n    Object.defineProperty(TreeView.prototype, \"element\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._element;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    TreeView.prototype.render = function () {\n        var _this = this;\n        this.fieldsSvc = new FieldsService(this.props);\n        return (React.createElement(\"div\", { className: 'k-widget k-treeview' + (this.props.className ? ' ' + this.props.className : ''), onKeyDown: this.onKeyDown, onFocus: this.onFocus, onBlur: this.onBlur, role: \"tree\", \"aria-multiselectable\": this.ariaMultiSelectable ? true : undefined, \"aria-label\": this.props['aria-label'], \"aria-labelledby\": this.props['aria-labelledby'], ref: function (element) { return _this._element = element; }, tabIndex: this.props.tabIndex },\n            React.createElement(\"ul\", { className: \"k-treeview-lines k-group\", role: \"group\" }, this.data.map(function (item, index) {\n                return (React.createElement(TreeViewItem, { item: item, itemId: index.toString(), treeGuid: _this.treeGuid, animate: _this.props.animate, focusedItemId: _this.state.focusedItemId, tabbableItemId: _this.state.tabbableItemId, fieldsService: _this.fieldsSvc, itemUI: _this.props.item, checkboxes: _this.props.checkboxes, ariaMultiSelectable: _this.ariaMultiSelectable, onItemClick: _this.onItemClick, onFocusDomElNeeded: _this.onFocusDomElNeeded, draggable: _this.props.draggable, onPress: _this.onPress, onDrag: _this.onDrag, onRelease: _this.onRelease, expandIcons: _this.props.expandIcons, onExpandChange: _this.onExpandChange, onCheckChange: _this.onCheckChange, key: index }));\n            }))));\n    };\n    /**\n     * @hidden\n     */\n    TreeView.prototype.componentDidUpdate = function () {\n        this.allowExplicitFocus = false;\n        this.refocusDueToFocusIdField();\n    };\n    TreeView.prototype.dispatchEventsOnKeyDown = function (event, focusedItem) {\n        var _this = this;\n        // isEnabled is the most expensive op and that is why is left last.\n        var isEnabled = function () {\n            return isEnabledAndAllParentsEnabled(_this.state.focusedItemId, _this.data, _this.fieldsSvc);\n        };\n        if (event.keyCode === Keys.left && this.fieldsSvc.expanded(focusedItem) && isEnabled()) {\n            this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);\n        }\n        else if (event.keyCode === Keys.right && !this.fieldsSvc.expanded(focusedItem) &&\n            (this.fieldsSvc.hasChildren(focusedItem) || hasChildren(focusedItem, this.props.childrenField)) && isEnabled()) {\n            this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);\n        }\n        else if (event.keyCode === Keys.enter && isEnabled()) {\n            this.dispatchItemClick(event, focusedItem, this.state.focusedItemId);\n        }\n        else if (event.keyCode === Keys.space && isEnabled()) {\n            // W/o preventDefault() long TreeViews gets incorrectly scrolled.\n            event.preventDefault();\n            this.dispatchCheckChange(event, focusedItem, this.state.focusedItemId);\n        }\n    };\n    TreeView.prototype.setFocus = function (focusedItemId) {\n        if (focusedItemId) {\n            if (this.fieldsSvc.focusIdField) {\n                var item = this.getItemById(focusedItemId);\n                this.setState({ focusedItemId: focusedItemId, focusedItemPublicId: this.fieldsSvc.focusId(item) });\n            }\n            else {\n                this.setState({ focusedItemId: focusedItemId });\n            }\n        }\n        else {\n            this.setState(function (state) {\n                return {\n                    focusedItemId: undefined,\n                    focusedItemPublicId: undefined,\n                    tabbableItemId: state.focusedItemId\n                };\n            });\n        }\n    };\n    TreeView.prototype.getFocusedItem = function () {\n        return this.state.focusedItemId ? this.getItemById(this.state.focusedItemId) : undefined;\n    };\n    TreeView.prototype.getItemById = function (itemId) {\n        return getItemById(itemId, this.data, this.props.childrenField || CHILDREN_FIELD);\n    };\n    TreeView.prototype.dispatchCheckChange = function (dispatchedEvent, item, itemId) {\n        dispatchEvent(this.props.onCheckChange, dispatchedEvent, this, { item: item, itemHierarchicalIndex: itemId });\n    };\n    TreeView.prototype.dispatchExpandChange = function (dispatchedEvent, item, itemId) {\n        dispatchEvent(this.props.onExpandChange, dispatchedEvent, this, { item: item, itemHierarchicalIndex: itemId });\n    };\n    TreeView.prototype.dispatchItemClick = function (dispatchedEvent, item, itemId) {\n        dispatchEvent(this.props.onItemClick, dispatchedEvent, this, { item: item, itemHierarchicalIndex: itemId });\n    };\n    TreeView.prototype.refocusDueToFocusIdField = function () {\n        if (this.fieldsSvc.focusIdField) {\n            var focusedItemPublicId = this.state.focusedItemPublicId;\n            if (focusedItemPublicId) {\n                var focusedItemId = this.props.getFocusHierarchicalIndex ?\n                    this.props.getFocusHierarchicalIndex(focusedItemPublicId) :\n                    resolveItemId(focusedItemPublicId, this.fieldsSvc.focusIdField, this.data, this.props.childrenField);\n                if (focusedItemId !== this.state.focusedItemId) {\n                    this.allowExplicitFocus = true;\n                    this.setState({ focusedItemId: focusedItemId });\n                }\n            }\n        }\n    };\n    Object.defineProperty(TreeView.prototype, \"ariaMultiSelectable\", {\n        get: function () {\n            return this.props['aria-multiselectable'] === true || this.props['aria-multiselectable'] === 'true';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TreeView.prototype, \"data\", {\n        get: function () {\n            return this.props.data || [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TreeView.prototype.focusDomItem = function (domItem) {\n        domItem.focus();\n    };\n    Object.defineProperty(TreeView.prototype, \"guid\", {\n        /**\n         * Returns the `guid` which is associated with the TreeView.\n         */\n        get: function () {\n            return this.treeGuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    TreeView.propTypes = {\n        data: PropTypes.arrayOf(PropTypes.any),\n        animate: PropTypes.bool,\n        tabIndex: PropTypes.number,\n        focusIdField: PropTypes.string,\n        getHierarchicalIndexById: PropTypes.func,\n        onExpandChange: PropTypes.func,\n        onItemClick: PropTypes.func,\n        expandField: PropTypes.string,\n        selectField: PropTypes.string,\n        childrenField: PropTypes.string,\n        hasChildrenField: PropTypes.string,\n        textField: PropTypes.string,\n        disableField: PropTypes.string,\n        item: PropTypes.any,\n        'aria-multiselectable': function (props, propName, componentName) {\n            if (props[propName] !== undefined\n                && props[propName] !== true\n                && props[propName] !== false\n                && props[propName] !== 'true'\n                && props[propName] !== 'false') {\n                return new Error('Invalid prop `' + propName + '` supplied to' +\n                    ' `' + componentName + '`. Validation failed.');\n            }\n            return null;\n        },\n        'aria-label': PropTypes.string,\n        'aria-labelledby': PropTypes.string\n    };\n    /**\n     * @hidden\n     */\n    TreeView.defaultProps = {\n        animate: true,\n        expandField: EXPAND_FIELD,\n        selectField: SELECT_FIELD,\n        hasChildrenField: HAS_CHILDREN_FIELD,\n        childrenField: CHILDREN_FIELD,\n        textField: TEXT_FIELD,\n        disableField: DISABLED_FIELD,\n        checkField: CHECK_FIELD,\n        checkIndeterminateField: CHECK_INDETERMINATE_FIELD\n    };\n    return TreeView;\n}(React.Component));\nexport default TreeView;\n"]},"metadata":{},"sourceType":"module"}