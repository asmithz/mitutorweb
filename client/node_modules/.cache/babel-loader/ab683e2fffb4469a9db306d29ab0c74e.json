{"ast":null,"code":"import { useControlledState } from '../../hooks/useControlledState';\nimport { DATA_ACTION } from '../../Scheduler';\n/**\n * Represents the available `action` types for the `SchedulerItemRemoveItemAction` objects.\n *\n * The available types are:\n * - `REMOVE_ITEM_SET`\n * - `REMOVE_ITEM_RESET`\n * - `REMOVE_ITEM_COMPLETE`\n */\n\nexport var REMOVE_ITEM_ACTION;\n\n(function (REMOVE_ITEM_ACTION) {\n  REMOVE_ITEM_ACTION[\"set\"] = \"REMOVE_ITEM_SET\";\n  REMOVE_ITEM_ACTION[\"reset\"] = \"REMOVE_ITEM_RESET\";\n  REMOVE_ITEM_ACTION[\"complete\"] = \"REMOVE_ITEM_COMPLETE\";\n})(REMOVE_ITEM_ACTION || (REMOVE_ITEM_ACTION = {}));\n/** @hidden */\n\n\nexport var useRemoveItem = function (config, state) {\n  var _a = useControlledState.apply(void 0, state),\n      removeItem = _a[0],\n      setRemoveItem = _a[1];\n\n  var handleRemoveItemAction = function (action) {\n    var newRemoveItem;\n\n    switch (action.type) {\n      case REMOVE_ITEM_ACTION.set:\n        newRemoveItem = action.payload;\n        break;\n\n      case REMOVE_ITEM_ACTION.reset:\n        newRemoveItem = null;\n        break;\n\n      case REMOVE_ITEM_ACTION.complete:\n        if (config.onDataAction && removeItem) {\n          config.onDataAction.call(undefined, {\n            type: DATA_ACTION.remove,\n            series: config.series,\n            dataItem: removeItem\n          });\n        }\n\n        newRemoveItem = null;\n        break;\n\n      default:\n        newRemoveItem = removeItem;\n        break;\n    }\n\n    setRemoveItem(newRemoveItem);\n  };\n\n  return [removeItem, setRemoveItem, handleRemoveItemAction];\n};","map":{"version":3,"sources":["/home/asmith/taller/proyecto1/proyecto-taller/client/node_modules/@progress/kendo-react-scheduler/dist/es/items/hooks/use-remove-item.js"],"names":["useControlledState","DATA_ACTION","REMOVE_ITEM_ACTION","useRemoveItem","config","state","_a","apply","removeItem","setRemoveItem","handleRemoveItemAction","action","newRemoveItem","type","set","payload","reset","complete","onDataAction","call","undefined","remove","series","dataItem"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,gCAAnC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,kBAAJ;;AACP,CAAC,UAAUA,kBAAV,EAA8B;AAC3BA,EAAAA,kBAAkB,CAAC,KAAD,CAAlB,GAA4B,iBAA5B;AACAA,EAAAA,kBAAkB,CAAC,OAAD,CAAlB,GAA8B,mBAA9B;AACAA,EAAAA,kBAAkB,CAAC,UAAD,CAAlB,GAAiC,sBAAjC;AACH,CAJD,EAIGA,kBAAkB,KAAKA,kBAAkB,GAAG,EAA1B,CAJrB;AAKA;;;AACA,OAAO,IAAIC,aAAa,GAAG,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AAChD,MAAIC,EAAE,GAAGN,kBAAkB,CAACO,KAAnB,CAAyB,KAAK,CAA9B,EAAiCF,KAAjC,CAAT;AAAA,MAAkDG,UAAU,GAAGF,EAAE,CAAC,CAAD,CAAjE;AAAA,MAAsEG,aAAa,GAAGH,EAAE,CAAC,CAAD,CAAxF;;AACA,MAAII,sBAAsB,GAAG,UAAUC,MAAV,EAAkB;AAC3C,QAAIC,aAAJ;;AACA,YAAQD,MAAM,CAACE,IAAf;AACI,WAAKX,kBAAkB,CAACY,GAAxB;AACIF,QAAAA,aAAa,GAAGD,MAAM,CAACI,OAAvB;AACA;;AACJ,WAAKb,kBAAkB,CAACc,KAAxB;AACIJ,QAAAA,aAAa,GAAG,IAAhB;AACA;;AACJ,WAAKV,kBAAkB,CAACe,QAAxB;AACI,YAAIb,MAAM,CAACc,YAAP,IAAuBV,UAA3B,EAAuC;AACnCJ,UAAAA,MAAM,CAACc,YAAP,CAAoBC,IAApB,CAAyBC,SAAzB,EAAoC;AAChCP,YAAAA,IAAI,EAAEZ,WAAW,CAACoB,MADc;AAEhCC,YAAAA,MAAM,EAAElB,MAAM,CAACkB,MAFiB;AAGhCC,YAAAA,QAAQ,EAAEf;AAHsB,WAApC;AAKH;;AACDI,QAAAA,aAAa,GAAG,IAAhB;AACA;;AACJ;AACIA,QAAAA,aAAa,GAAGJ,UAAhB;AACA;AAnBR;;AAqBAC,IAAAA,aAAa,CAACG,aAAD,CAAb;AACH,GAxBD;;AAyBA,SAAO,CAACJ,UAAD,EAAaC,aAAb,EAA4BC,sBAA5B,CAAP;AACH,CA5BM","sourcesContent":["import { useControlledState } from '../../hooks/useControlledState';\nimport { DATA_ACTION } from '../../Scheduler';\n/**\n * Represents the available `action` types for the `SchedulerItemRemoveItemAction` objects.\n *\n * The available types are:\n * - `REMOVE_ITEM_SET`\n * - `REMOVE_ITEM_RESET`\n * - `REMOVE_ITEM_COMPLETE`\n */\nexport var REMOVE_ITEM_ACTION;\n(function (REMOVE_ITEM_ACTION) {\n    REMOVE_ITEM_ACTION[\"set\"] = \"REMOVE_ITEM_SET\";\n    REMOVE_ITEM_ACTION[\"reset\"] = \"REMOVE_ITEM_RESET\";\n    REMOVE_ITEM_ACTION[\"complete\"] = \"REMOVE_ITEM_COMPLETE\";\n})(REMOVE_ITEM_ACTION || (REMOVE_ITEM_ACTION = {}));\n/** @hidden */\nexport var useRemoveItem = function (config, state) {\n    var _a = useControlledState.apply(void 0, state), removeItem = _a[0], setRemoveItem = _a[1];\n    var handleRemoveItemAction = function (action) {\n        var newRemoveItem;\n        switch (action.type) {\n            case REMOVE_ITEM_ACTION.set:\n                newRemoveItem = action.payload;\n                break;\n            case REMOVE_ITEM_ACTION.reset:\n                newRemoveItem = null;\n                break;\n            case REMOVE_ITEM_ACTION.complete:\n                if (config.onDataAction && removeItem) {\n                    config.onDataAction.call(undefined, {\n                        type: DATA_ACTION.remove,\n                        series: config.series,\n                        dataItem: removeItem\n                    });\n                }\n                newRemoveItem = null;\n                break;\n            default:\n                newRemoveItem = removeItem;\n                break;\n        }\n        setRemoveItem(newRemoveItem);\n    };\n    return [removeItem, setRemoveItem, handleRemoveItemAction];\n};\n"]},"metadata":{},"sourceType":"module"}