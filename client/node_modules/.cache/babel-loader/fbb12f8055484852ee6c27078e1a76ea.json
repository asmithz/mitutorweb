{"ast":null,"code":"import { useControlledState } from '../../hooks/useControlledState';\n/**\n * Represents the available `action` types for the `SchedulerItemSeriesAction` objects.\n *\n * The available actions are:\n * - `SERIES_RESET`\n * - `SERIES_SET`\n * - `SERIES_TOGGLE`\n */\n\nexport var SERIES_ACTION;\n\n(function (SERIES_ACTION) {\n  SERIES_ACTION[\"reset\"] = \"SERIES_RESET\";\n  SERIES_ACTION[\"set\"] = \"SERIES_SET\";\n  SERIES_ACTION[\"toggle\"] = \"SERIES_TOGGLE\";\n})(SERIES_ACTION || (SERIES_ACTION = {}));\n\nvar seriesReducer = function (state, action) {\n  switch (action.type) {\n    case SERIES_ACTION.reset:\n      return null;\n\n    case SERIES_ACTION.set:\n      return action.payload;\n\n    case SERIES_ACTION.toggle:\n      return !state;\n\n    default:\n      return state;\n  }\n};\n/** @hidden */\n\n\nexport var useSeries = function (defaultProp, prop, callback) {\n  var _a = useControlledState(defaultProp, prop, callback),\n      series = _a[0],\n      setSeries = _a[1];\n\n  var handleSeriesAction = function (action) {\n    var newSeries = seriesReducer(series, action);\n    setSeries(newSeries);\n  };\n\n  return [series, setSeries, handleSeriesAction];\n};","map":{"version":3,"sources":["/home/asmith/taller/proyecto1/proyecto-taller/client/node_modules/@progress/kendo-react-scheduler/dist/es/items/hooks/use-series.js"],"names":["useControlledState","SERIES_ACTION","seriesReducer","state","action","type","reset","set","payload","toggle","useSeries","defaultProp","prop","callback","_a","series","setSeries","handleSeriesAction","newSeries"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,gCAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,aAAJ;;AACP,CAAC,UAAUA,aAAV,EAAyB;AACtBA,EAAAA,aAAa,CAAC,OAAD,CAAb,GAAyB,cAAzB;AACAA,EAAAA,aAAa,CAAC,KAAD,CAAb,GAAuB,YAAvB;AACAA,EAAAA,aAAa,CAAC,QAAD,CAAb,GAA0B,eAA1B;AACH,CAJD,EAIGA,aAAa,KAAKA,aAAa,GAAG,EAArB,CAJhB;;AAKA,IAAIC,aAAa,GAAG,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACzC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,aAAa,CAACK,KAAnB;AACI,aAAO,IAAP;;AACJ,SAAKL,aAAa,CAACM,GAAnB;AACI,aAAOH,MAAM,CAACI,OAAd;;AACJ,SAAKP,aAAa,CAACQ,MAAnB;AACI,aAAO,CAACN,KAAR;;AACJ;AACI,aAAOA,KAAP;AARR;AAUH,CAXD;AAYA;;;AACA,OAAO,IAAIO,SAAS,GAAG,UAAUC,WAAV,EAAuBC,IAAvB,EAA6BC,QAA7B,EAAuC;AAC1D,MAAIC,EAAE,GAAGd,kBAAkB,CAACW,WAAD,EAAcC,IAAd,EAAoBC,QAApB,CAA3B;AAAA,MAA0DE,MAAM,GAAGD,EAAE,CAAC,CAAD,CAArE;AAAA,MAA0EE,SAAS,GAAGF,EAAE,CAAC,CAAD,CAAxF;;AACA,MAAIG,kBAAkB,GAAG,UAAUb,MAAV,EAAkB;AACvC,QAAIc,SAAS,GAAGhB,aAAa,CAACa,MAAD,EAASX,MAAT,CAA7B;AACAY,IAAAA,SAAS,CAACE,SAAD,CAAT;AACH,GAHD;;AAIA,SAAO,CAACH,MAAD,EAASC,SAAT,EAAoBC,kBAApB,CAAP;AACH,CAPM","sourcesContent":["import { useControlledState } from '../../hooks/useControlledState';\n/**\n * Represents the available `action` types for the `SchedulerItemSeriesAction` objects.\n *\n * The available actions are:\n * - `SERIES_RESET`\n * - `SERIES_SET`\n * - `SERIES_TOGGLE`\n */\nexport var SERIES_ACTION;\n(function (SERIES_ACTION) {\n    SERIES_ACTION[\"reset\"] = \"SERIES_RESET\";\n    SERIES_ACTION[\"set\"] = \"SERIES_SET\";\n    SERIES_ACTION[\"toggle\"] = \"SERIES_TOGGLE\";\n})(SERIES_ACTION || (SERIES_ACTION = {}));\nvar seriesReducer = function (state, action) {\n    switch (action.type) {\n        case SERIES_ACTION.reset:\n            return null;\n        case SERIES_ACTION.set:\n            return action.payload;\n        case SERIES_ACTION.toggle:\n            return !state;\n        default:\n            return state;\n    }\n};\n/** @hidden */\nexport var useSeries = function (defaultProp, prop, callback) {\n    var _a = useControlledState(defaultProp, prop, callback), series = _a[0], setSeries = _a[1];\n    var handleSeriesAction = function (action) {\n        var newSeries = seriesReducer(series, action);\n        setSeries(newSeries);\n    };\n    return [series, setSeries, handleSeriesAction];\n};\n"]},"metadata":{},"sourceType":"module"}