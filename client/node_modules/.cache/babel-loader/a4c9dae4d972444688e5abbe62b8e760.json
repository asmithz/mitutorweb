{"ast":null,"code":"var _jsxFileName = \"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/SignUp.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage, useField } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Radio = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field] = useField({ ...props,\n    type: 'radio'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        ...field,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Radio, \"z3HN8a8tvzohqoKT3WnQcNgd46I=\", false, function () {\n  return [useField];\n});\n\n_c = Radio;\n\nconst Button = props => {\n  let button = '';\n\n  if (props.estado) {\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Siguiente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this);\n  } else {\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Crear cuenta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 18\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: button\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Button;\n\nconst Formularios = props => {\n  let formulario = '';\n\n  if (props.estado) {\n    formulario = /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        tipo: ''\n      },\n      validate: validaciones,\n      onSubmit: values => props.updateTipo(values.tipo),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Radio, {\n          name: \"tipo\",\n          value: \"estudiante\",\n          label: \"Estudiante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Radio, {\n          name: \"tipo\",\n          value: \"tutor\",\n          label: \"Tutor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"tipo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: \"boton\",\n          estado: props.estado,\n          updateEstado: props.updateEstado\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: formulario\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Formularios;\n\nconst validaciones = values => {\n  const errors = {};\n\n  if (!values.tipo) {\n    errors.tipo = 'Debe asignar un valor';\n  }\n\n  return errors;\n};\n\nlet usuario = {\n  tipo: ''\n};\n\nconst SignUp = () => {\n  _s2();\n\n  const [estado, setEstado] = useState(false); // updateEstado -> avanza en el formulario\n  // estado = 0 -> tutor o estudiante\n  // estado = 1 -> datos personales \n  // estado = 2 -> asignaturas\n  // estado = 3 -> horario\n\n  const updateEstado = () => {\n    setEstado(true);\n  };\n\n  const [tipo, setTipo] = useState('');\n\n  const updateTipo = nuevo_tipo => {\n    setTipo(nuevo_tipo);\n    usuario.tipo = tipo;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"P\\xE1gina crear cuenta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formularios, {\n      estado: estado,\n      updateEstado: updateEstado,\n      updateTipo: updateTipo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(SignUp, \"3zqVRH9hUP04UojRU6Boo/wUK6M=\");\n\n_c4 = SignUp;\nexport default SignUp;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Radio\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Formularios\");\n$RefreshReg$(_c4, \"SignUp\");","map":{"version":3,"sources":["/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/SignUp.js"],"names":["React","useRef","useState","Formik","Form","Field","ErrorMessage","useField","Radio","label","props","field","type","Button","button","estado","Formularios","formulario","tipo","validaciones","values","updateTipo","updateEstado","errors","usuario","SignUp","setEstado","setTipo","nuevo_tipo"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage, useField } from 'formik';\n\nconst Radio = ({label, ...props}) => {\n    const [field] = useField({ ...props, type: 'radio'});\n    return(\n        <div>\n            <label>\n                <input type='radio' {...field} {...props}/>\n                {label}\n            </label>\n        </div>\n    );\n}\n\nconst Button = (props) => {\n    let button = '';\n    if(props.estado){\n        button = <button type=\"submit\">Siguiente</button>\n    }\n    else{\n        button = <button type=\"submit\">Crear cuenta</button>\n    }\n    return(\n        <div>{button}</div>\n    );\n}\n\nconst Formularios = (props) => {\n    let formulario = '';\n    if(props.estado){\n        formulario = \n            <Formik \n                initialValues={{tipo:''}}\n                validate={validaciones}\n                onSubmit={(values => props.updateTipo(values.tipo))}\n            >\n                <Form>\n                    <Radio name=\"tipo\" value=\"estudiante\" label=\"Estudiante\" />\n                    <br/>\n                    <Radio name=\"tipo\" value=\"tutor\" label=\"Tutor\" />\n                    <br/>\n                    <ErrorMessage name=\"tipo\" />\n                    <Button name=\"boton\" estado={props.estado} updateEstado={props.updateEstado}/>\n                </Form>\n            </Formik>\n    }\n    \n    return (\n        <div>{formulario}</div>\n    );\n}\n\nconst validaciones = (values) => {\n    const errors = {};\n    \n    if(!values.tipo){\n        errors.tipo = 'Debe asignar un valor'\n    }\n\n    return errors;\n}\n\nlet usuario = {\n    tipo: ''\n}\n\nconst SignUp = () => {\n    const [estado, setEstado] = useState(false);\n    // updateEstado -> avanza en el formulario\n    // estado = 0 -> tutor o estudiante\n    // estado = 1 -> datos personales \n    // estado = 2 -> asignaturas\n    // estado = 3 -> horario\n    const updateEstado = () => {\n        setEstado(true);\n    }\n\n    const [tipo, setTipo] = useState('');\n    const updateTipo = (nuevo_tipo) => {\n        setTipo(nuevo_tipo);\n        usuario.tipo = tipo;\n    }\n\n\n    return(\n        <div>\n            <h1>Página crear cuenta</h1>\n                <Formularios estado={estado} updateEstado={updateEstado} updateTipo={updateTipo}/>\n        </div>\n    );\n}\n\nexport default SignUp"]},"metadata":{},"sourceType":"module"}