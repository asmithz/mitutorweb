{"ast":null,"code":"var _jsxFileName = \"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/chat/ChatVirtual.js\",\n    _s = $RefreshSig$();\n\nimport './ChatVirtual.css';\nimport { Formik, Form, Field, ErrorMessage, isObject } from 'formik';\nimport BotonFormulario from '../botones/BotonFormulario';\nimport io from 'socket.io-client';\nimport ObtenerUsuarioID from '../controllers/ObtenerUsuarioID';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:2000/');\nsocket.on(\"connection\");\nconst api = axios.create({\n  withCredentials: true,\n  credentials: 'include',\n  baseURL: `http://localhost:2000/api/mensaje`\n});\n\nconst ChatVirtual = props => {\n  _s();\n\n  const emisorID = ObtenerUsuarioID();\n  const chatID = useLocation().pathname.split(\"/\")[2];\n  const [mensajes, setMensajes] = useState([]);\n  const [validarMensajes, setvalidarMensajes] = useState(false);\n\n  const enviarMensaje = async mensajeRequest => {\n    const mi_token = localStorage.getItem('x-token');\n    const mensaje = Object.values(mensajeRequest)[0];\n    const mensajeEnviado = {\n      'emisor_id': emisorID,\n      mensaje\n    };\n    console.log(mensajeEnviado);\n\n    try {\n      const response = await api.post(\"/enviarMensaje/\" + chatID, mensajeEnviado, {\n        headers: {\n          'Content-type': 'application/json',\n          'x-token': mi_token\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    socket.emit(\"mensaje\", mensajeEnviado);\n  };\n\n  useEffect(() => {\n    const mostrarMensajes = async () => {\n      const mi_token = localStorage.getItem('x-token');\n\n      try {\n        const response = await api.get(\"/obtenerMensajes/\" + chatID, {\n          headers: {\n            'Content-type': 'application/json',\n            'x-token': mi_token\n          }\n        });\n\n        if (response.data.mensajes) {\n          if (!validarMensajes) {\n            setMensajes(response.data.mensajes);\n            setvalidarMensajes(true);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    mostrarMensajes();\n  }, []);\n\n  const solicitarEnlace = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Virtual\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-tarjeta\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mensajes\",\n        children: mensajes.forEach(mensajeEnviado => {\n          {\n            emisorID === mensajeEnviado.emisor_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mensaje-usuario\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"max1\",\n                children: mensajeEnviado.mensaje\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mensaje-otro-usuario\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"max1\",\n                children: mensajeEnviado.mensaje\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(BotonFormulario, {\n          className: \"btn btn-primary\",\n          nombre: \"boton\",\n          value: \"Zoom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            mensaje: ''\n          },\n          onSubmit: values => enviarMensaje(values),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-input-mensaje\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating\",\n                children: [/*#__PURE__*/_jsxDEV(Field, {\n                  placeholder: \"Escriba un mensaje\",\n                  className: \"form-control\",\n                  id: \"floatingMensaje\",\n                  name: \"mensaje\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"floatingNombre\",\n                  children: \"Escriba un mensaje\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"mensaje\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(BotonFormulario, {\n                  className: \"btn btn-primary\",\n                  nombre: \"boton\",\n                  value: \"Enviar mensaje\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatVirtual, \"kuR+ST2keh99glatN3vP4ZUP/wE=\", false, function () {\n  return [useLocation];\n});\n\n_c = ChatVirtual;\nexport default ChatVirtual;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatVirtual\");","map":{"version":3,"sources":["/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/chat/ChatVirtual.js"],"names":["Formik","Form","Field","ErrorMessage","isObject","BotonFormulario","io","ObtenerUsuarioID","useEffect","useState","useLocation","axios","socket","on","api","create","withCredentials","credentials","baseURL","ChatVirtual","props","emisorID","chatID","pathname","split","mensajes","setMensajes","validarMensajes","setvalidarMensajes","enviarMensaje","mensajeRequest","mi_token","localStorage","getItem","mensaje","Object","values","mensajeEnviado","console","log","response","post","headers","error","emit","mostrarMensajes","get","data","solicitarEnlace","forEach","emisor_id"],"mappings":"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","sourcesContent":["import './ChatVirtual.css'\nimport { Formik, Form, Field, ErrorMessage, isObject } from 'formik';\nimport BotonFormulario from '../botones/BotonFormulario';\nimport io from 'socket.io-client'\nimport ObtenerUsuarioID from '../controllers/ObtenerUsuarioID';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom'\nimport axios from 'axios'\n\nconst socket = io('http://localhost:2000/')\nsocket.on(\"connection\")\n\nconst api = axios.create({\n  withCredentials: true, \n  credentials: 'include',\n  baseURL: `http://localhost:2000/api/mensaje`\n})\n\nconst ChatVirtual = (props) => {\n    const emisorID = ObtenerUsuarioID()\n    const chatID = useLocation().pathname.split(\"/\")[2]\n    const [mensajes, setMensajes] = useState([])\n    const [validarMensajes, setvalidarMensajes] = useState(false)\n\n    const enviarMensaje = async (mensajeRequest) => {\n        const mi_token = localStorage.getItem('x-token')\n        const mensaje = Object.values(mensajeRequest)[0]\n        const mensajeEnviado = {'emisor_id': emisorID, mensaje}\n        console.log(mensajeEnviado)\n        try{\n            const response = await api.post(\"/enviarMensaje/\"+chatID, mensajeEnviado, {\n                headers: {\n                    'Content-type': 'application/json',\n                    'x-token': mi_token\n                }})\n        }catch(error){\n            console.log(error)\n        }\n        socket.emit(\"mensaje\", mensajeEnviado)\n    }\n\n    useEffect(() => {\n        const mostrarMensajes = async () => {\n            const mi_token = localStorage.getItem('x-token')\n            try{\n                const response = await api.get(\"/obtenerMensajes/\"+chatID, {\n                    headers: {\n                        'Content-type': 'application/json',\n                        'x-token': mi_token\n                    }})\n                if(response.data.mensajes){\n                    if(!validarMensajes){\n                        setMensajes(response.data.mensajes)\n                        setvalidarMensajes(true)\n                    }\n                }\n            }catch(error){\n                console.log(error)\n            }\n        }\n        mostrarMensajes()\n        }, [])\n\n    const solicitarEnlace = () => {\n\n    }\n\n    return(\n        <div>\n            <br/>\n            <h1>Chat Virtual</h1>\n            <div className=\"chat-tarjeta\">\n                <div className=\"mensajes\">\n                    {\n                       mensajes.forEach((mensajeEnviado) => {\n                           {\n                            emisorID === mensajeEnviado.emisor_id ?\n                                <div className=\"mensaje-usuario\">\n                                    <p className=\"max1\">{mensajeEnviado.mensaje}</p>\n                                </div>\n                            :\n                            <div className=\"mensaje-otro-usuario\">\n                                <p className=\"max1\">{mensajeEnviado.mensaje}</p>\n                            </div>\n                           }\n                       }) \n                    }\n                </div>\n                <div className=\"chat-bottom\">\n                    <BotonFormulario className=\"btn btn-primary\" nombre=\"boton\" value=\"Zoom\"/>\n                    <Formik initialValues={{\n                        mensaje: ''\n                    }}\n                    onSubmit={values => enviarMensaje(values)}>\n                        <Form>\n                            <div className=\"chat-input-mensaje\">\n                                <div className=\"form-floating\">\n                                    <Field placeholder=\"Escriba un mensaje\" className=\"form-control\" id=\"floatingMensaje\" name=\"mensaje\" type=\"text\"/>\n                                    <label for=\"floatingNombre\">Escriba un mensaje</label>\n                                    <ErrorMessage name=\"mensaje\"/>\n                                </div>\n                                <div>\n                                    <BotonFormulario className=\"btn btn-primary\" nombre=\"boton\" value=\"Enviar mensaje\"/>\n                                </div>\n                            </div>\n                        </Form>\n                    </Formik>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default ChatVirtual;"]},"metadata":{},"sourceType":"module"}