{"ast":null,"code":"import * as React from 'react';\nimport { getPadding, setRect } from '../views/common/utils';\nimport { BORDER_WIDTH } from '../constants';\n\nvar stripSelectorSymbol = function (str) {\n  return str.slice(1, str.length);\n};\n/** @hidden */\n\n\nexport var useRowSync = function (args, inputs) {\n  var element = args.element;\n\n  var syncHeight = function () {\n    if (!element || !element.current) {\n      return;\n    }\n\n    var highest = [[]];\n    var elements = Array.from(element.current.querySelectorAll(args.selector)).filter(function (el) {\n      return !el.classList.contains(stripSelectorSymbol(args.applyTo));\n    });\n    elements.forEach(function (el) {\n      var height = el.clientHeight;\n      var x = el.getAttribute(args.horizontalAttribute);\n      var y = el.getAttribute(args.verticalAttribute);\n\n      if (x === null || y === null) {\n        return;\n      }\n\n      if (!highest[x]) {\n        highest[x] = [];\n      }\n\n      if (!highest[x][y] || height > highest[x][y]) {\n        highest[x][y] = height - BORDER_WIDTH;\n      }\n    });\n    var targets = Array.from(element.current.querySelectorAll(args.applyTo));\n    targets.forEach(function (el) {\n      var x = el.getAttribute(args.horizontalAttribute);\n      var y = el.getAttribute(args.verticalAttribute);\n\n      if (x === null || y === null) {\n        return;\n      }\n\n      var slotPadding = getPadding(el);\n      var height = highest[x][y] - slotPadding;\n      setRect(el, {\n        height: height\n      }, true);\n    });\n  };\n\n  React.useEffect(syncHeight, inputs);\n};","map":{"version":3,"sources":["/home/asmith/taller/proyecto1/proyecto-taller/client/node_modules/@progress/kendo-react-scheduler/dist/es/hooks/useRowSync.js"],"names":["React","getPadding","setRect","BORDER_WIDTH","stripSelectorSymbol","str","slice","length","useRowSync","args","inputs","element","syncHeight","current","highest","elements","Array","from","querySelectorAll","selector","filter","el","classList","contains","applyTo","forEach","height","clientHeight","x","getAttribute","horizontalAttribute","y","verticalAttribute","targets","slotPadding","useEffect"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,uBAApC;AACA,SAASC,YAAT,QAA6B,cAA7B;;AACA,IAAIC,mBAAmB,GAAG,UAAUC,GAAV,EAAe;AAAE,SAAOA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAaD,GAAG,CAACE,MAAjB,CAAP;AAAkC,CAA7E;AACA;;;AACA,OAAO,IAAIC,UAAU,GAAG,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAC5C,MAAIC,OAAO,GAAGF,IAAI,CAACE,OAAnB;;AACA,MAAIC,UAAU,GAAG,YAAY;AACzB,QAAI,CAACD,OAAD,IAAY,CAACA,OAAO,CAACE,OAAzB,EAAkC;AAC9B;AACH;;AACD,QAAIC,OAAO,GAAG,CAAC,EAAD,CAAd;AACA,QAAIC,QAAQ,GAAGC,KAAK,CACfC,IADU,CACLN,OAAO,CAACE,OAAR,CAAgBK,gBAAhB,CAAiCT,IAAI,CAACU,QAAtC,CADK,EAEVC,MAFU,CAEH,UAAUC,EAAV,EAAc;AAAE,aAAO,CAACA,EAAE,CAACC,SAAH,CAAaC,QAAb,CAAsBnB,mBAAmB,CAACK,IAAI,CAACe,OAAN,CAAzC,CAAR;AAAmE,KAFhF,CAAf;AAGAT,IAAAA,QAAQ,CAACU,OAAT,CAAiB,UAAUJ,EAAV,EAAc;AAC3B,UAAIK,MAAM,GAAGL,EAAE,CAACM,YAAhB;AACA,UAAIC,CAAC,GAAGP,EAAE,CAACQ,YAAH,CAAgBpB,IAAI,CAACqB,mBAArB,CAAR;AACA,UAAIC,CAAC,GAAGV,EAAE,CAACQ,YAAH,CAAgBpB,IAAI,CAACuB,iBAArB,CAAR;;AACA,UAAIJ,CAAC,KAAK,IAAN,IAAcG,CAAC,KAAK,IAAxB,EAA8B;AAC1B;AACH;;AACD,UAAI,CAACjB,OAAO,CAACc,CAAD,CAAZ,EAAiB;AACbd,QAAAA,OAAO,CAACc,CAAD,CAAP,GAAa,EAAb;AACH;;AACD,UAAI,CAACd,OAAO,CAACc,CAAD,CAAP,CAAWG,CAAX,CAAD,IAAkBL,MAAM,GAAGZ,OAAO,CAACc,CAAD,CAAP,CAAWG,CAAX,CAA/B,EAA8C;AAC1CjB,QAAAA,OAAO,CAACc,CAAD,CAAP,CAAWG,CAAX,IAAgBL,MAAM,GAAGvB,YAAzB;AACH;AACJ,KAbD;AAcA,QAAI8B,OAAO,GAAGjB,KAAK,CAACC,IAAN,CAAWN,OAAO,CAACE,OAAR,CAAgBK,gBAAhB,CAAiCT,IAAI,CAACe,OAAtC,CAAX,CAAd;AACAS,IAAAA,OAAO,CAACR,OAAR,CAAgB,UAAUJ,EAAV,EAAc;AAC1B,UAAIO,CAAC,GAAGP,EAAE,CAACQ,YAAH,CAAgBpB,IAAI,CAACqB,mBAArB,CAAR;AACA,UAAIC,CAAC,GAAGV,EAAE,CAACQ,YAAH,CAAgBpB,IAAI,CAACuB,iBAArB,CAAR;;AACA,UAAIJ,CAAC,KAAK,IAAN,IAAcG,CAAC,KAAK,IAAxB,EAA8B;AAC1B;AACH;;AACD,UAAIG,WAAW,GAAGjC,UAAU,CAACoB,EAAD,CAA5B;AACA,UAAIK,MAAM,GAAGZ,OAAO,CAACc,CAAD,CAAP,CAAWG,CAAX,IAAgBG,WAA7B;AACAhC,MAAAA,OAAO,CAACmB,EAAD,EAAK;AAAEK,QAAAA,MAAM,EAAEA;AAAV,OAAL,EAAyB,IAAzB,CAAP;AACH,KATD;AAUH,GAjCD;;AAkCA1B,EAAAA,KAAK,CAACmC,SAAN,CAAgBvB,UAAhB,EAA4BF,MAA5B;AACH,CArCM","sourcesContent":["import * as React from 'react';\nimport { getPadding, setRect } from '../views/common/utils';\nimport { BORDER_WIDTH } from '../constants';\nvar stripSelectorSymbol = function (str) { return str.slice(1, str.length); };\n/** @hidden */\nexport var useRowSync = function (args, inputs) {\n    var element = args.element;\n    var syncHeight = function () {\n        if (!element || !element.current) {\n            return;\n        }\n        var highest = [[]];\n        var elements = Array\n            .from(element.current.querySelectorAll(args.selector))\n            .filter(function (el) { return !el.classList.contains(stripSelectorSymbol(args.applyTo)); });\n        elements.forEach(function (el) {\n            var height = el.clientHeight;\n            var x = el.getAttribute(args.horizontalAttribute);\n            var y = el.getAttribute(args.verticalAttribute);\n            if (x === null || y === null) {\n                return;\n            }\n            if (!highest[x]) {\n                highest[x] = [];\n            }\n            if (!highest[x][y] || height > highest[x][y]) {\n                highest[x][y] = height - BORDER_WIDTH;\n            }\n        });\n        var targets = Array.from(element.current.querySelectorAll(args.applyTo));\n        targets.forEach(function (el) {\n            var x = el.getAttribute(args.horizontalAttribute);\n            var y = el.getAttribute(args.verticalAttribute);\n            if (x === null || y === null) {\n                return;\n            }\n            var slotPadding = getPadding(el);\n            var height = highest[x][y] - slotPadding;\n            setRect(el, { height: height }, true);\n        });\n    };\n    React.useEffect(syncHeight, inputs);\n};\n"]},"metadata":{},"sourceType":"module"}