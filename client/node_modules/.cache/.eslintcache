[{"/home/asmith/taller/proyecto1/proyecto-taller/client/src/index.js":"1","/home/asmith/taller/proyecto1/proyecto-taller/client/src/App.js":"2","/home/asmith/taller/proyecto1/proyecto-taller/client/src/reportWebVitals.js":"3","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Inicio.js":"4","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Bandeja.js":"5","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Login.js":"6","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Buscar.js":"7","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/navegation/Navbar.js":"8","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/SignUp.js":"9","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/FormulariosSignUp/FormularioEstudiante.js":"10","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/FormulariosSignUp/FormularioTutor.js":"11","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/BotonFormulario.js":"12","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/RadioFormulario.js":"13","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/SelectFormulario.js":"14","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/FormulariosSignUp/FormularioAsignaturas.js":"15","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/asignaturas/SelectAsignaturas.js":"16","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/horario/Horario.js":"17","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/Checkbox.js":"18","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/peticion/Peticion.js":"19","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/Dropdown.js":"20","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Perfil.js":"21","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/PerfilEstudiante.js":"22","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/PerfilTutor.js":"23","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/controllers/DetectarTipoUsuario.js":"24","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/controllers/ObtenerUsuarioID.js":"25","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/ModalBotonBuscar.js":"26","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/chat/ChatVirtual.js":"27","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/chatsincrono/ChatAsincrono.js":"28","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/chat/APIZoom.js":"29"},{"size":500,"mtime":1641737681140,"results":"30","hashOfConfig":"31"},{"size":1141,"mtime":1641753320578,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1639011033452,"results":"33","hashOfConfig":"31"},{"size":111,"mtime":1641607920769,"results":"34","hashOfConfig":"31"},{"size":4122,"mtime":1641743372434,"results":"35","hashOfConfig":"31"},{"size":2864,"mtime":1641607892209,"results":"36","hashOfConfig":"31"},{"size":9603,"mtime":1641758381738,"results":"37","hashOfConfig":"31"},{"size":1627,"mtime":1641775196685,"results":"38","hashOfConfig":"31"},{"size":2217,"mtime":1641608069729,"results":"39","hashOfConfig":"31"},{"size":4049,"mtime":1641746069221,"results":"40","hashOfConfig":"31"},{"size":5120,"mtime":1641607861388,"results":"41","hashOfConfig":"31"},{"size":419,"mtime":1640293709437,"results":"42","hashOfConfig":"31"},{"size":343,"mtime":1640272695254,"results":"43","hashOfConfig":"31"},{"size":326,"mtime":1640455089297,"results":"44","hashOfConfig":"31"},{"size":1731,"mtime":1640299346590,"results":"45","hashOfConfig":"31"},{"size":1180,"mtime":1640297509538,"results":"46","hashOfConfig":"31"},{"size":6714,"mtime":1641607777262,"results":"47","hashOfConfig":"31"},{"size":481,"mtime":1640455113617,"results":"48","hashOfConfig":"31"},{"size":3094,"mtime":1641711354122,"results":"49","hashOfConfig":"31"},{"size":665,"mtime":1641645477721,"results":"50","hashOfConfig":"31"},{"size":723,"mtime":1641572922174,"results":"51","hashOfConfig":"31"},{"size":10643,"mtime":1641592924850,"results":"52","hashOfConfig":"31"},{"size":11408,"mtime":1641682390889,"results":"53","hashOfConfig":"31"},{"size":1082,"mtime":1641567675125,"results":"54","hashOfConfig":"31"},{"size":973,"mtime":1641742131899,"results":"55","hashOfConfig":"31"},{"size":3750,"mtime":1641644239291,"results":"56","hashOfConfig":"31"},{"size":5730,"mtime":1641772922688,"results":"57","hashOfConfig":"31"},{"size":2023,"mtime":1641753338768,"results":"58","hashOfConfig":"31"},{"size":1093,"mtime":1641772882908,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"obzyhs",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/asmith/taller/proyecto1/proyecto-taller/client/src/index.js",[],["131","132"],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/App.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/reportWebVitals.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Inicio.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Bandeja.js",["133","134"],"import React, { useEffect, useState } from 'react'\nimport Peticion from '../peticion/Peticion'\nimport DetectarTipoUsuarioID from '../controllers/DetectarTipoUsuario'\nimport ObtenerUsuarioID from '../controllers/ObtenerUsuarioID'\nimport '../pages_css/Bandeja.css'\nimport '../peticion/Peticion.css'\nimport axios from 'axios'\nimport ChatAsincrono from '../chatsincrono/ChatAsincrono'\n\n\nconst api_peticion = axios.create({\n    withCredentials: true, \n    credentials: 'include',\n    baseURL: `http://localhost:2000/api/peticion`\n})\n\nconst api_chat = axios.create({\n    withCredentials: true, \n    credentials: 'include',\n    baseURL: `http://localhost:2000/api/chat`\n})\n\nconst Bandeja = () => {\n  const usuarioID = ObtenerUsuarioID()\n  const tipo_usuario = DetectarTipoUsuarioID()\n  const [peticionesFetch, setpeticionesFetch] = useState([])\n  const [endFetch, setendFetch] = useState(true)\n\n  useEffect(()=>{\n    //checkear cuando se obtenga el id del usuario\n    if(usuarioID && tipo_usuario){\n    const obtenerPeticiones = async () => {\n      const mi_token = localStorage.getItem('x-token')\n      try{\n        const response = await api_peticion.get(\"/obtenerPeticion/\"+usuarioID, {\n                    headers: {\n                    'Content-type': 'application/json',\n                    'x-token': mi_token\n                    }}\n                  )\n        if(response && response.data.peticiones){\n          if(endFetch){\n            setpeticionesFetch(response.data.peticiones)\n            setendFetch(false)\n          }\n        }\n      }catch(error){\n        console.log(error)\n      }\n    }\n    obtenerPeticiones()\n    }\n  },[usuarioID, tipo_usuario, peticionesFetch])\n\n  const mostrarPeticiones = () => {\n    if(peticionesFetch && peticionesFetch.length > 0){\n      if(tipo_usuario.tipo === \"tutor\" || tipo_usuario.tipo === \"estudiante\"){\n        return true\n      }\n    }\n    else{\n      return false\n    }\n  }\n\n  const [chatsFetch, setchatsFetch] = useState([])\n  const [endChatFetch, setendChatFetch] = useState(true)\n\n  useEffect(()=>{\n    //checkear cuando se obtenga el id del usuario\n    if(usuarioID && tipo_usuario){\n    const obtenerChats = async () => {\n      const mi_token = localStorage.getItem('x-token')\n      try{\n        const response = await api_chat.get(\"/obtenerChat/\"+usuarioID, {\n                    headers: {\n                    'Content-type': 'application/json',\n                    'x-token': mi_token\n                    }}\n                  )\n        if(response && response.data.chats){\n          if(endChatFetch){\n            setchatsFetch(response.data.chats)\n            console.log(chatsFetch)\n            setendChatFetch(false)\n          }\n        }\n      }catch(error){\n        console.log(error)\n      }\n    }\n    obtenerChats()\n    }\n  },[usuarioID, tipo_usuario, chatsFetch])\n\n  const mostrarChats = () => {\n    if(chatsFetch && chatsFetch.length > 0){\n      if(tipo_usuario.tipo === \"tutor\" || tipo_usuario.tipo === \"estudiante\"){\n        return true\n      }\n    }\n    else{\n      return false\n    }\n  }\n\n  return(\n    <div className=\"plantilla-bandeja\">\n      <br/>\n        <h1>Bandeja de peticiones</h1>\n        <div className=\"modulos\">\n            { mostrarPeticiones && \n              peticionesFetch.map((peticion, i) => {\n                return <Peticion key={i} titulo={peticion.titulo} \n                estado={peticion.estado} \n                id_tutor={peticion.tutor_id} \n                id_estudiante={peticion.estudiante_id}\n                id_peticion={peticion._id}\n                tipo_usuario={tipo_usuario}/>\n              })\n            }\n        </div>\n        <h1>Chats</h1>\n        <div className=\"modulos\">\n            { mostrarChats && \n              chatsFetch.map((chat, i) => {\n                return <ChatAsincrono key={i} titulo={chat.titulo} \n                estado={chat.estado} \n                id_receptor={chat.receptor_id} \n                id_emisor={chat.emisor_id}\n                id_chat={chat._id}\n                tipo_usuario={tipo_usuario}/>\n              })\n            }\n        </div>\n    </div>\n  )\n}\n\nexport default Bandeja\n","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Login.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Buscar.js",["135","136"],"import React, { useEffect, useState } from 'react';\nimport '../pages_css/Buscar.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport asignaturas from '../asignaturas/Asignaturas.json';\nimport CheckBox from '../botones/Checkbox';\nimport Dropdown from '../botones/Dropdown';\nimport BotonFormulario from '../botones/BotonFormulario';\nimport missing_picture from '../../img/missing_picture.png';\nimport axios from 'axios';\nimport ModalBotonBuscar from '../botones/ModalBotonBuscar';\nimport ObtenerUsuarioID from '../controllers/ObtenerUsuarioID';\n\nconst api = axios.create({\n    baseURL: `http://localhost:2000/api/events`\n})\n\nconst api_peticion = axios.create({\n    baseURL: `http://localhost:2000/api/peticion`\n})\n\n/*Componente filtro de asignaturas(los checkbox)*/\nconst Asignaturas = (props) => {\n  const asignatura = asignaturas.filter((ramo) => ramo.materia === props.value).map((ramo) => \n          <CheckBox name={props.name} materia={props.value} key={ramo.id} value={ramo.ramo}/>\n      );\n      return(\n          <>{asignatura}</>\n      );\n}\n\n/*Permite filtrar a los tutores*/\nconst Filtro = (props) => {\n  return(\n    <div className=\"menu-filtro\">\n      <Formik initialValues={{\n            nombre: '',\n            apellido: '',\n            asignaturas: '',\n            horario: '',\n            calificacion: '1.0'\n          }}\n          onSubmit={values => {props.func(values)}}>\n        <Form>\n          <div className=\"filtro\">\n            <div className=\"form-floating\">\n              <Field placeholder=\"Nombre\" className=\"form-control\" id=\"floatingNombre\" name=\"nombre\" type=\"text\"/>\n              <label for=\"floatingNombre\">Nombre</label>\n              <ErrorMessage name=\"nombre\"/>\n            </div>\n            <div className=\"form-floating\">\n              <Field placeholder=\"Apellido\" className=\"form-control\" id=\"floatingApellido\" name=\"apellido\" type=\"text\"/>\n              <label for=\"floatingApellido\">Apellido</label>\n              <ErrorMessage name=\"apellido\"/>\n            </div>\n            <div>\n              <Dropdown tipo=\"checkboxes\" value=\"Asignaturas\" \n                component={\n                  <div>\n                    <span>Matemática</span>\n                    <Asignaturas name=\"asignaturas\" value=\"Matemática\"/>\n                    <span>Informática</span>\n                    <Asignaturas name=\"asignaturas\" value=\"Informática\"/>\n                    <span>Física</span>\n                    <Asignaturas name=\"asignaturas\" value=\"Física\"/>\n                  </div>\n                }/>\n            </div>\n            <div> \n              <Dropdown tipo=\"checkboxes\" value=\"Horario\" \n                component={\n                  <div>\n                    <span name=\"horario\">Días</span>\n                      <CheckBox name=\"horario\" key=\"l-1\" value=\"Lunes\"/>\n                      <CheckBox name=\"horario\" key=\"ma-1\" value=\"Martes\"/>\n                      <CheckBox name=\"horario\" key=\"mi-1\" value=\"Miércoles\"/>\n                      <CheckBox name=\"horario\" key=\"j-1\" value=\"Jueves\"/>\n                      <CheckBox name=\"horario\" key=\"v-1\" value=\"Viernes\"/>\n                      <CheckBox name=\"horario\" key=\"s-1\" value=\"Sábado\"/>\n                      <CheckBox name=\"horario\" key=\"d-1\" value=\"Domingo\"/>\n                  </div>\n                }/>\n            </div>\n            <div> \n              <Dropdown tipo=\"checkboxes\" value=\"Calificación\" \n                component={\n                  <div>\n                    <span>Mínima puntuación</span>\n                    <br/>\n                      <Field type=\"radio\" name=\"calificacion\" key=\"c-1\" id=\"c-1\" value=\"1.0\" style={{marginRight: 10}}/>\n                      <label for=\"c-1\">1.0</label>\n                    <br/>\n                      <Field type=\"radio\" name=\"calificacion\" key=\"c-2\" id=\"c-2\" value=\"2.0\" style={{marginRight: 10}}/>\n                      <label for=\"c-2\">2.0</label>\n                    <br/>\n                      <Field type=\"radio\" name=\"calificacion\" key=\"c-3\" id=\"c-3\" value=\"3.0\" style={{marginRight: 10}}/>\n                      <label for=\"c-3\">3.0</label>\n                    <br/>\n                      <Field type=\"radio\" name=\"calificacion\" key=\"c-4\" id=\"c-4\" value=\"4.0\" style={{marginRight: 10}}/>\n                      <label for=\"c-4\">4.0</label>\n                    <br/>\n                      <Field type=\"radio\" name=\"calificacion\" key=\"c-5\" id=\"c-5\" value=\"5.0\" style={{marginRight: 10}}/>\n                      <label for=\"c-5\">5.0</label>\n                    <br/>\n                  </div>\n                }/>\n            </div>\n            <div>\n            <BotonFormulario className=\"btn btn-primary\" nombre=\"boton\" value=\"Buscar\"/>\n            </div>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n\nconst TarjetaTutor = (props) => {\n  const mi_token = localStorage.getItem('x-token')\n  const estudianteID = ObtenerUsuarioID()\n  const enviarSolicitud = async (id_tutor) => {\n    try{\n      const response = await api_peticion.post('/agregarPeticion', \n                { estudiante_id: estudianteID, tutor_id: id_tutor }, \n                  {\n                  headers: {\n                  'Content-type': 'application/json',\n                  'x-token': mi_token\n                  }\n                  }\n                )\n                console.log(response)\n      if(!response.data.ok){\n        alert(\"Ya realizó una solicitud de chat virtual con este tutor anteriormente.\")\n      }\n      else{\n        alert(\"Usted realizó una solicitud de chat virtual.\")\n      }\n    }catch(error){\n      console.log(error)\n    }\n  }\n  return(\n    <div className=\"tarjeta-tutor\" key={props.key_tutor}>\n      <div className=\"tarjeta-tutor-imagen\">\n        <img src={missing_picture}/>\n      </div>\n      <div className=\"tarjeta-tutor-texto\">\n        <h5>{props.datos_tutor.nombre} {props.datos_tutor.apellido}</h5>\n      </div>\n      <div className=\"tarjeta-tutor-texto\">\n        <h6>Calificación: {props.datos_tutor.calificacion}</h6>\n      </div>\n      <div className=\"tarjeta-tutor-botones\">\n        <ModalBotonBuscar className=\"boton-agregar\" value=\"Horario\" \n          title={\"Horario de \"+props.datos_tutor.nombre+\" \"+props.datos_tutor.apellido} \n          user={props.datos_tutor.user}\n          content={props.horario_tutor} tipo=\"horario\" />\n        <ModalBotonBuscar className=\"boton-agregar\" value=\"Asignaturas\" \n          title={\"Asignaturas de \"+props.datos_tutor.nombre+\" \"+props.datos_tutor.apellido} \n          user={props.datos_tutor.user}\n          content={props.datos_tutor.asignaturas} tipo=\"asignaturas\"/>\n      </div>\n      <div className=\"tarjeta-tutor-solicitud\"> \n        <BotonFormulario func={() => enviarSolicitud(props.datos_tutor._id)} className=\"boton-eliminar\" value=\"Solicitar Tutoria\"/>\n      </div>\n    </div>\n  );\n}\n\nconst Tutores = (props) => {\n  return(\n    <div className=\"plantilla-tutores\">\n      {props.datos_tutores.map((tutor) =>\n        <TarjetaTutor key_tutor={tutor.id} datos_tutor={tutor.datos} horario_tutor={tutor.horario}/>)\n      }\n    </div>\n  );\n}\n\n/*Componente clase Buscar*/\nconst Buscar = () => {\n  //activar filtro\n  const[filtro, setFiltro] = useState(false);\n  const updateFiltro = (values) => {\n    setFiltro(!filtro)\n    \n    \n    //logica filtrar\n    setTutoresFetch(tutoresFetch.filter((tutor) => compararDato(tutor.datos.nombre.toLowerCase(), values.nombre.toLowerCase()) \n    && compararDato(tutor.datos.apellido.toLowerCase(), values.apellido.toLowerCase())\n    && compararArr(tutor.datos.asignaturas, values.asignaturas)\n    && checkDia(tutor.horario, values.horario)\n    && checkCalificacion(tutor.datos.calificacion, values.calificacion)\n    ))\n  }\n\n  const checkCalificacion = (tutorCal, selectCal) =>{\n    if(parseInt(tutorCal) >= parseInt(selectCal)){\n      return true\n    }\n    else{\n      return false\n    }\n\n  }\n\n  const checkDia = (horario, horarioSelec) => {\n    for(const diaSelec in horarioSelec){\n      for(let dia of Object.keys(horario)){\n        if(dia === horarioSelec[diaSelec] && dia !== \"_id\"){\n          if(horario[dia].length === 0){\n            return false\n          }\n        }\n      }\n    }\n    return true\n  }\n\n  const compararDato = (dato1, dato2) => {\n    dato1 = dato1.toLowerCase()\n    dato2 = dato2.toLowerCase()\n    if(dato2 === \"\"){\n      return true\n    }\n    if(dato1 === dato2){\n      return true\n    }\n    else{\n      return false\n    }\n  }\n\n  const compararArr = (arr1, arr2) => {\n    if(arr2.length === 0){\n      return true\n    }\n    for(let valor1 of arr2){\n      if(!(arr1.includes(valor1))){\n        return false\n      }\n    }\n    return true\n  }\n  \n  const[tutoresFetch, setTutoresFetch] = useState([]);\n  useEffect(() => {\n    const obtenerTutores = async () => {\n      try{\n          if(!filtro){\n            const response = await api.get('/obtenerTutores');\n            if(response && response.data.tutores) setTutoresFetch(response.data.tutores);\n          }\n        } catch(err){\n          console.log(err)\n        }\n      }\n      console.log(tutoresFetch)\n    obtenerTutores();\n  }, [filtro])\n  return(\n    <div>\n      <h1>Buscar Tutor</h1>\n      <div className=\"plantilla-buscar\">\n        {\n          // check si existen tutores antes del GET\n          tutoresFetch && \n          <>\n            <Filtro func={updateFiltro} />\n            {tutoresFetch.length === 0 ?\n              <h2>No hay coincidencias</h2> \n            :\n              <Tutores key=\"1\" datos_tutores={tutoresFetch}/>\n            }\n          </>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Buscar\n","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/navegation/Navbar.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/SignUp.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/FormulariosSignUp/FormularioEstudiante.js",["137","138","139"],"import { Formik, Form, Field, ErrorMessage, useField } from 'formik';\nimport BotonFormulario from '../../botones/BotonFormulario';\nimport SelectFormulario from '../../botones/SelectFormulario';\nimport axios from 'axios'\n\nconst api = axios.create({\n    baseURL: `http://localhost:2000/api/log`\n})\n\nconst validaciones = () => {\n    const errors = {};\n}\n\nconst crearEstudiante = async (values) => {\n    try{\n        await api.post('/registrarEstudiante', values);\n        alert(\"Se ha registrado! \")\n        window.location.replace('/Login');\n    }catch{\n        alert(\"Error intente denuevo\")\n        window.location.reload(false);\n    }\n}\n\nconst FormularioEstudiante = (props) => {\n    return(\n        <div>\n            <Formik\n                initialValues={{\n                    tipo: props.tipo,\n                    nombre: '', \n                    apellido: '', \n                    rut: '', \n                    edad: '', \n                    sexo:'', \n                    email: '', \n                    establecimiento: '',\n                }}\n                onSubmit={values => crearEstudiante(values)}\n        >\n            <Form>\n                <div className=\"form-estudiante\">\n                    <div>\n                        <h4>Rellene el formulario</h4>\n                    </div>\n                    <div className=\"form-floating\">\n                        <Field placeholder=\"Nombre\" className=\"form-control\" id=\"floatingNombre\" name=\"nombre\" type=\"text\"/>\n                        <label for=\"floatingNombre\">Nombre</label>\n                        <ErrorMessage name=\"nombre\"/>\n                    </div>\n                    <div className=\"form-floating\">\n                        <Field placeholder=\"Apellido\" className=\"form-control\" id=\"floatingApellido\" name=\"apellido\" type=\"text\"/>\n                        <label for=\"floatingApellido\">Apellido</label>\n                        <ErrorMessage name=\"apellido\"/>\n                    </div>\n                    <div className=\"form-floating\">\n                        <Field placeholder=\"Rut\" className=\"form-control\" id=\"floatingRut\" name=\"rut\" type=\"text\"/>\n                        <label for=\"floatingRut\">Rut</label>\n                        <ErrorMessage name=\"rut\"/>\n                    </div>\n                    <div className=\"form-floating\">\n                        <Field placeholder=\"Edad\" className=\"form-control\" id=\"floatingEdad\" name=\"edad\" type=\"text\"/>\n                        <label for=\"floatingEdad\">Edad</label>\n                        <ErrorMessage name=\"edad\"/>\n                    </div>\n                    <div class=\"form-floating\">\n                        <SelectFormulario className=\"form-select\" name=\"sexo\">\n                            <option>Seleccione sexo</option>\n                            <option value=\"masculino\">Masculino</option>\n                            <option value=\"femenino\">Femenino</option>\n                            <option value=\"s_otro\">Otro</option>\n                        </SelectFormulario>\n                    </div>\n                    <div className=\"form-floating\">\n                        <Field placeholder=\"Establecimiento Educacional\" className=\"form-control\" id=\"floatingEstablecimiento\" name=\"establecimiento\" type=\"text\"/>\n                        <label for=\"floatingEstablecimiento\">Establecimiento Educacional</label>\n                        <ErrorMessage name=\"establecimiento\"/>\n                    </div>\n                    <div className=\"form-floating\">\n                        <Field placeholder=\"Email\" className=\"form-control\" id=\"floatingEmail\" name=\"email\" type=\"email\"/>\n                        <label for=\"floatingEmail\">Email</label>\n                        <ErrorMessage name=\"email\"/>\n                    </div>\n                    <div>\n                        <BotonFormulario className=\"boton-siguiente\" nombre=\"boton\" value=\"Registrar\"/>\n                    </div>\n                </div>\n            </Form>\n        </Formik> \n       </div>\n    );\n}\n\nexport default FormularioEstudiante;","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/FormulariosSignUp/FormularioTutor.js",["140"],"import React , { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage  } from 'formik';\nimport BotonFormulario from '../../botones/BotonFormulario';\nimport FormularioAsignaturas from './FormularioAsignaturas';\nimport SelectFormulario from '../../botones/SelectFormulario';\nimport Horario from '../../horario/Horario'\n\nconst validacion = () => {\n\n}\n\nconst FormularioTutor = (props) => {\n\n    const [displayHorario, setTipo] = useState(false);\n    const updatedisplayHorario = () => {\n        setTipo(true);\n    }\n\n    const [datos_tutor, setDatos] = useState({})\n    const obtenerDatos = (values) => {\n        setDatos({...values})\n        updatedisplayHorario();\n    }\n    return(\n        <div>\n            {displayHorario === false &&\n                <Formik\n                    initialValues={{\n                        tipo: props.tipo,\n                        nombre: '', \n                        apellido: '', \n                        rut: '', \n                        edad: '', \n                        sexo: '',\n                        email: '',\n                        establecimiento: '',\n                        asignaturas: [''],\n                    }}\n                    onSubmit={(values) => \n                                { \n                                    obtenerDatos(values)\n                                }\n                            }\n                >\n                    <Form>\n                        <div className=\"form-tutor\">\n                            <div>\n                                <h4>Rellene el formulario</h4>\n                            </div>\n                            <div className=\"form-floating\">\n                                <Field placeholder=\"Nombre\" className=\"form-control\" id=\"floatingNombre\" name=\"nombre\" type=\"text\"/>\n                                <label for=\"floatingNombre\">Nombre</label>\n                                <ErrorMessage name=\"nombre\"/>\n                            </div>\n                            <div className=\"form-floating\">\n                                <Field placeholder=\"Apellido\" className=\"form-control\" id=\"floatingApellido\" name=\"apellido\" type=\"text\"/>\n                                <label for=\"floatingApellido\">Apellido</label>\n                                <ErrorMessage name=\"apellido\"/>\n                            </div>\n                            <div className=\"form-floating\">\n                                <Field placeholder=\"Rut\" className=\"form-control\" id=\"floatingRut\" name=\"rut\" type=\"text\"/>\n                                <label for=\"floatingRut\">Rut</label>\n                                <ErrorMessage name=\"rut\"/>\n                            </div>\n                            <div className=\"form-floating\">\n                                <Field placeholder=\"Edad\" className=\"form-control\" id=\"floatingEdad\" name=\"edad\" type=\"text\"/>\n                                <label for=\"floatingEdad\">Edad</label>\n                                <ErrorMessage name=\"edad\"/>\n                            </div> \n                            <div class=\"form-floating\">\n                                <SelectFormulario className=\"form-select form-select-lg mb-3\" name=\"sexo\">\n                                    <option>Seleccione sexo</option>\n                                    <option value=\"masculino\">Masculino</option>\n                                    <option value=\"femenino\">Femenino</option>\n                                    <option value=\"s_otro\">Otro</option>\n                                </SelectFormulario>\n                            </div>\n                            <div className=\"form-floating\">\n                                <Field placeholder=\"Email\" className=\"form-control\" id=\"floatingEmail\" name=\"email\" type=\"email\"/>\n                                <label for=\"floatingEmail\">Email</label>\n                                <ErrorMessage name=\"email\"/>\n                            </div>\n                            <div className=\"form-floating\">\n                                <Field placeholder=\"Establecimiento\" className=\"form-control\" id=\"floatingEstablecimiento\" name=\"establecimiento\" type=\"text\"/>\n                                <label for=\"floatingEdad\">Establecimiento</label>\n                                <ErrorMessage name=\"establecimiento\"/>\n                            </div>\n                            <div>\n                                <FormularioAsignaturas name=\"asignaturas\" label=\"Agregue las asignaturas que realiza\" />\n                            </div>\n                            <div>\n                                <BotonFormulario className=\"boton-siguiente\" name=\"boton\" value=\"Siguiente\"/>\n                            </div>\n                        </div>\n                    </Form>\n                </Formik> \n                }\n                {displayHorario === true && \n                <div>\n                    <Horario name=\"horario\" accion=\"registrar\" datos={datos_tutor} titulo=\"Escoja su horario\"/>\n                </div>\n                }\n\n       </div>\n    );\n}\n\nexport default FormularioTutor;","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/BotonFormulario.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/RadioFormulario.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/SelectFormulario.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/FormulariosSignUp/FormularioAsignaturas.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/asignaturas/SelectAsignaturas.js",["141"],"import React from 'react';\nimport { useField } from 'formik';\nimport asignaturas from './Asignaturas.json'\nimport BotonFormulario from '../botones/BotonFormulario';\n\n// <option> mostrar ramo por grupo\nconst OpcionAsignatura = (props) => {\n    const asignatura = asignaturas.filter((ramo) => ramo.materia === props.name).map((ramo) => \n        <option key={ramo.id} value={ramo.ramo}>\n            {ramo.ramo}\n        </option>\n    );\n    return(\n        <>{asignatura}</>\n    );\n}\n\n// <optgroup> mostrar por grupo\nconst OptGroupAsignatura = (props) => {\n    return(\n        <optgroup key=\"optgroup\" label={props.name}>\n            <OpcionAsignatura name={props.name}/>\n        </optgroup>\n    );\n}\n\n// <select>\nconst SelectAsignaturas = (props) => {\n    const [field] = useField(props);\n    return(\n        <>\n        <select className=\"form-select form-select-sm\" {...field} {...props}>\n            <option key=\"optgroup\" label=\"Seleccione\"></option>\n            <OptGroupAsignatura name=\"Matemática\"/>\n            <OptGroupAsignatura name=\"Física\"/>\n            <OptGroupAsignatura name=\"Informática\"/>\n        </select>\n        </>\n    );\n}\n\nexport default SelectAsignaturas;","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/horario/Horario.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/Checkbox.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/peticion/Peticion.js",["142","143","144"],"import '../peticion/Peticion.css'\nimport BotonFormulario from '../botones/BotonFormulario';\nimport axios from 'axios'\nimport { useEffect } from 'react';\n\nconst api_peticion = axios.create({\n    withCredentials: true, \n    credentials: 'include',\n    baseURL: `http://localhost:2000/api/peticion`\n})\n\nconst Peticion = (props) => {\n    const borrarPeticion = async () => {\n        try{\n            const response = await api_peticion.delete(\"/borrarPeticion/\"+props.id_peticion);\n            if(response){\n                alert(\"La solicitud fue rechazada, se eliminará.\")\n                window.location.reload(false);\n            }\n        }catch(error){\n            console.log(error)\n        }\n    }\n    const aceptarPeticion = async () => {\n        try{\n            const response = await api_peticion.put(\"aceptarPeticion/\"+props.id_peticion);\n            alert(\"La solicitud fue aceptada. Ahora el estudiante debe iniciar el chat.\")\n            window.location.reload(false);\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    const iniciarChat = async () => {\n        try{\n            const response = await api_peticion.put(\"/iniciarChat/\"+props.id_peticion);\n            alert(\"Chat asíncrono con su tutor, ha sido iniciado con éxito.\")\n            window.location.reload(false)\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    return (\n            <div className=\"modulo-peticion\">\n                <div className=\"elemento-peticion\">\n                    <span>{props.titulo}</span>\n                </div>\n                <div className=\"elemento-peticion\">\n                    <span>Estado: {props.estado}</span>\n                </div>\n                    {\n                        props.tipo_usuario.tipo === \"tutor\" &&\n                        <div className=\"elemento-peticion\">\n                        <div className=\"botones-peticion\">\n                        {\n                            props.estado === \"Pendiente\" &&\n                        <>\n                            <BotonFormulario className=\"boton-aceptar\" func={aceptarPeticion} name=\"boton\" value=\"Aceptar\"/>\n                            <BotonFormulario className=\"boton-rechazar\" func={borrarPeticion} name=\"boton\" value=\"Rechazar\"/>\n                        </>\n                        }\n                        {\n                            props.estado === \"Aceptada\" &&\n                            <span>Espere que el estudiante apruebe la solicitud</span>\n                        }\n                        </div>\n\n                        </div>\n                    }\n                    {\n                        props.tipo_usuario.tipo === \"estudiante\" &&\n                        <div className=\"boton-peticion\">\n                        {\n                            props.estado === \"Aceptada\" &&\n                            <BotonFormulario className=\"boton-aceptar\" func={iniciarChat} name=\"boton\" value=\"Iniciar Chat\"/>\n                        }\n                        </div>\n                    }\n            </div>\n    );\n\n}\n\nexport default Peticion;","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/Dropdown.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/Perfil.js",["145","146"],"import React, { useEffect, useState } from 'react';\nimport '../pages_css/Perfil.css';\nimport PerfilTutor from './PerfilTutor';\nimport PerfilEstudiante from './PerfilEstudiante';\nimport DetectarTipoUsuario from '../controllers/DetectarTipoUsuario';\n\nconst Perfil = () => {\n    const usuario = DetectarTipoUsuario();\n    return(\n        <div>\n            <div>\n                <h1>l </h1>\n                <h1>Mi perfil </h1>\n            </div>\n            {usuario.tipo === \"estudiante\" &&\n                <PerfilEstudiante datos_estudiante={usuario} /> \n            }\n            {usuario.tipo === \"tutor\" &&\n                <PerfilTutor datos_tutor={usuario} />\n            }\n        </div>\n    );\n}\n\nexport default Perfil;","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/PerfilEstudiante.js",["147","148","149","150"],"import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useEffect, useState } from 'react';\nimport missing_picture from '../../img/missing_picture.png';\nimport BotonFormulario from '../botones/BotonFormulario';\nimport SelectFormulario from '../botones/SelectFormulario';\nimport ObtenerUsuarioID from '../controllers/ObtenerUsuarioID';\nimport axios from 'axios'\n\nconst api = axios.create({\n  withCredentials: true, \n  credentials: 'include',\n  baseURL: `http://localhost:2000/api/events`\n})\n\nconst EditarDatos = (props) => {\n\n    const mi_token = localStorage.getItem('x-token')\n    const estudianteID = ObtenerUsuarioID()\n    \n    \n    const actualizarEstudiante = async (datos) => {\n        try{\n            //actualizar \n            await api.put('/actualizarEstudiante/'+estudianteID, datos, {\n                headers: {\n                'Content-type': 'application/json',\n                'x-token': mi_token\n                }\n            });\n            alert(\"Sus datos se actualizaron correctamente\")\n            window.location.reload(false);\n        }catch(error){\n            alert(\"Algo ocurrio, error.\")\n            console.log(error)\n            window.location.reload(false);\n        }\n    }\n    \n    return(\n        <div>\n            <Formik initialValues={{\n                nombre: '', \n                apellido: '', \n                rut: '', \n                edad: '', \n                sexo:'', \n                email: '', \n                establecimiento: '',\n                }}\n                onSubmit={values => actualizarEstudiante(values)}\n                > \n                <Form>\n                    <div className=\"editar-perfil\">\n                        <div className=\"form-floating\">\n                            <Field placeholder={props.datos_estudiante.nombre} className=\"form-control\" id=\"floatingNombre\" name=\"nombre\" type=\"text\"/>\n                            <label for=\"floatingNombre\">Nombre: {props.datos_estudiante.nombre}</label>\n                            <ErrorMessage name=\"nombre\"/>\n                        </div>\n                        <div className=\"form-floating\">\n                            <Field placeholder={props.datos_estudiante.apellido} className=\"form-control\" id=\"floatingApellido\" name=\"apellido\" type=\"text\"/>\n                            <label for=\"floatingApellido\">Apellido: {props.datos_estudiante.apellido}</label>\n                            <ErrorMessage name=\"apellido\"/>\n                        </div>\n                        <div className=\"form-floating\">\n                            <Field placeholder={props.datos_estudiante.rut} className=\"form-control\" id=\"floatingRut\" name=\"rut\" type=\"text\"/>\n                            <label for=\"floatingRut\">Rut: {props.datos_estudiante.rut}</label>\n                            <ErrorMessage name=\"rut\"/>\n                        </div>\n                        <div className=\"form-floating\">\n                            <Field placeholder={props.datos_estudiante.edad} className=\"form-control\" id=\"floatingEdad\" name=\"edad\" type=\"text\"/>\n                            <label for=\"floatingEdad\">Edad: {props.datos_estudiante.edad}</label>\n                            <ErrorMessage name=\"edad\"/>\n                        </div>\n\n                        <div className=\"form-floating\">\n                            <Field placeholder={props.datos_estudiante.establecimiento} className=\"form-control\" id=\"floatingEstablecimiento\" name=\"establecimiento\" type=\"text\"/>\n                            <label for=\"floatingEstablecimiento\">Establecimiento Educacional: {props.datos_estudiante.establecimiento}</label>\n                            <ErrorMessage name=\"establecimiento\"/>\n                        </div>\n                        <div className=\"form-floating\">\n                            <Field placeholder={props.datos_estudiante.email} className=\"form-control\" id=\"floatingEmail\" name=\"email\" type=\"email\"/>\n                            <label for=\"floatingEmail\">Email: {props.datos_estudiante.email}</label>\n                            <ErrorMessage name=\"email\"/>\n                        </div>\n                            <div class=\"form-floating\">\n                            <SelectFormulario className=\"form-select\" name=\"sexo\">\n                                <option value=\"masculino\">Masculino</option>\n                                <option value=\"femenino\">Femenino</option>\n                                <option value=\"s_otro\">Otro</option>\n                            </SelectFormulario>\n                        </div>                               \n                        <div>\n                            <BotonFormulario className=\"boton-aceptar\" nombre=\"boton\" value=\"Aceptar\"/>\n                        </div>\n                    </div>\n                </Form>\n            </Formik>\n        </div>\n    )\n}\n\nconst MostrarDatos = (props) => { \n    return(\n        <div className=\"editar-perfil\">\n            <div className=\"form-floating\">\n                <input placeholder={props.datos_estudiante.nombre} className=\"form-control\" id=\"floatingNombre\" name=\"nombre\" type=\"text\" disabled/>\n                <label for=\"floatingNombre\">Nombre: {props.datos_estudiante.nombre}</label>\n            </div>\n            <div className=\"form-floating\">\n                <input placeholder={props.datos_estudiante.apellido} className=\"form-control\" id=\"floatingApellido\" name=\"apellido\" type=\"text\" disabled/>\n                <label for=\"floatingApellido\">Apellido: {props.datos_estudiante.apellido}</label>\n            </div>\n            <div className=\"form-floating\">\n                <input placeholder={props.datos_estudiante.rut} className=\"form-control\" id=\"floatingRut\" name=\"rut\" type=\"text\" disabled/>\n                <label for=\"floatingRut\">Rut: {props.datos_estudiante.rut}</label>\n            </div>\n            <div className=\"form-floating\">\n                <input placeholder={props.datos_estudiante.edad} className=\"form-control\" id=\"floatingEdad\" name=\"edad\" type=\"text\" disabled/>\n                <label for=\"floatingEdad\">Edad: {props.datos_estudiante.edad}</label>\n            </div>\n\n            <div className=\"form-floating\">\n                <input placeholder={props.datos_estudiante.establecimiento} className=\"form-control\" id=\"floatingEstablecimiento\" name=\"establecimiento\" type=\"text\" disabled/>\n                <label for=\"floatingEstablecimiento\">Establecimiento Educacional: {props.datos_estudiante.establecimiento}</label>\n            </div>\n            <div className=\"form-floating\">\n                <input placeholder={props.datos_estudiante.email} className=\"form-control\" id=\"floatingEmail\" name=\"email\" type=\"email\" disabled/>\n                <label for=\"floatingEmail\">Email: {props.datos_estudiante.email}</label>\n            </div>\n            <div className=\"form-floating\">\n                <input placeholder={props.datos_estudiante.sexo} className=\"form-control\" id=\"floatingSexo\" name=\"sexo\" type=\"sexo\" disabled/>\n                <label for=\"floatingSexo\">Sexo: {props.datos_estudiante.sexo}</label>\n            </div>\n        </div>\n    )\n}\n\nconst PerfilEstudiante = (props) => {\n\n    const [editarDatos, seteditarDatos] = useState(false);\n    const updateEditar = () => {\n        seteditarDatos(true)\n    }\n\n    const [estudiante, setEstudiante] = useState([])\n    const [dataEstudiante, setdataEstudiante] = useState(true)\n\n    useEffect(() => {\n        const datosEstudiante = async () => {\n            try{\n                const response = await api.get('/obtenerEstudiante', props.datos_estudiante);\n                if(response && response.data.estudiantes){\n                    const encontrarEstudiante = response.data.estudiantes.filter(alumno => alumno._id === props.datos_estudiante.id )\n                    if(dataEstudiante){\n                        setEstudiante(encontrarEstudiante)\n                        setdataEstudiante(false)\n                    }\n                }\n            }catch(error){\n                console.log(error) \n            }\n\n        }\n        datosEstudiante();\n        console.log(estudiante)\n    }, [estudiante])\n    \n    const [borrarEstudiante, setBorrar] = useState(false);\n    const updateBorrarEstudiante = () => {\n        setBorrar(true);\n    }\n\n    const estudianteID = ObtenerUsuarioID();\n    const mi_token = localStorage.getItem('x-token');\n\n    useEffect(() => {\n        if(borrarEstudiante){\n            const borrar = async () => {\n                try{\n                    const response = await api.delete('/borrarEstudiante'+estudianteID, props.dato, {\n                        headers: {\n                        'Content-type': 'application/json',\n                        'x-token': mi_token\n                        }\n                    })\n                    alert(\"Gracias por utilizar la plataforma MiTutorWeb. Hasta pronto.\")\n                    localStorage.removeItem('x-token')\n                    window.location.replace('/Inicio')\n                }catch(error){\n                    console.log(error)\n                }\n            }\n            borrar();\n        }\n    }, [borrarEstudiante])\n    return(\n        <div>\n            {estudiante.length >= 1 &&\n            <div className=\"plantilla-perfil\">\n                <div className=\"informacion-perfil\">\n                    <div className=\"imagen\">\n                        <img src={missing_picture}/>\n                    </div>\n                    <div className=\"datos-perfil\">\n                        <h3>Estudiante:</h3>\n                        <h4>{estudiante[0].nombre} {estudiante[0].apellido}</h4>\n                    </div>\n                    <hr></hr>\n                </div>\n                <div>\n                <h2>Mis datos personales</h2>\n                { \n                    editarDatos === false ?\n                    <>\n                        <div>\n                            <MostrarDatos datos_estudiante={estudiante[0]} />\n                            <BotonFormulario func={updateEditar} className=\"boton-editar\" nombre=\"boton-editar\" value=\"Editar Datos\" />\n                        </div>\n                        <div className=\"botones-perfil\">\n                            <BotonFormulario className=\"boton-eliminar\" func={updateBorrarEstudiante} nombre=\"boton\" value=\"Borrar mi cuenta\"/>\n                        </div>\n                    </>\n                    :\n                        <EditarDatos datos_estudiante={estudiante[0]} id_estudiante={props.datos_estudiante.id}/>\n                }\n\n                </div>\n            </div>\n            }\n        </div>\n    );\n}\n\nexport default PerfilEstudiante;","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/pages/PerfilTutor.js",["151","152","153","154","155","156"],"import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useEffect, useState } from 'react';\nimport missing_picture from '../../img/missing_picture.png';\nimport BotonFormulario from '../botones/BotonFormulario';\nimport SelectFormulario from '../botones/SelectFormulario';\nimport ObtenerUsuarioID from '../controllers/ObtenerUsuarioID';\nimport Horario from '../horario/Horario';\nimport FormularioAsignaturas from './FormulariosSignUp/FormularioAsignaturas';\nimport DetectarTipoUsuario from '../controllers/DetectarTipoUsuario';\nimport axios from 'axios'\n\nconst api = axios.create({\n  withCredentials: true, \n  credentials: 'include',\n  baseURL: `http://localhost:2000/api/events`\n})\n\nconst EditarDatos = (props) => {\n\n    const [datos_tutor, setDatos] = useState({})\n    const obtenerDatos = (values) => {\n        setDatos({...values})\n    }\n\n    const mi_token = localStorage.getItem('x-token')\n    const tutorID = ObtenerUsuarioID()\n    \n    const actualizarTutor = async (datos) => {\n        try{\n            //actualizar \n            await api.put('/actualizarTutor/'+tutorID, datos, {\n                headers: {\n                'Content-type': 'application/json',\n                'x-token': mi_token\n                }\n            });\n            alert(\"Sus datos se actualizaron correctamente\")\n            window.location.reload(false);\n        }catch(error){\n            console.log(error)\n            alert(\"Algo ocurrio, error\")\n            window.location.reload(false);\n        }\n    }\n\n    return(\n        <div>\n            <Formik initialValues={{\n                nombre: '', \n                apellido: '', \n                rut: '', \n                edad: '', \n                sexo:'', \n                email: '', \n                establecimiento: '',\n                asignaturas: ['']\n                }}\n                onSubmit={values => actualizarTutor(values)}\n                > \n                <Form>\n                    <div className=\"editar-perfil\">\n                        <div className=\"form-floating\">\n                            <Field placeholder=\"Nombre\" className=\"form-control\" id=\"floatingNombre\" name=\"nombre\" type=\"text\"/>\n                            <label for=\"floatingNombre\">Nombre: {props.datos_tutor.datos.nombre} </label>\n                            <ErrorMessage name=\"nombre\"/>\n                        </div>\n                        <div className=\"form-floating\">\n                            <Field placeholder=\"Apellido\" className=\"form-control\" id=\"floatingApellido\" name=\"apellido\" type=\"text\"/>\n                            <label for=\"floatingApellido\">Apellido: {props.datos_tutor.datos.apellido}</label>\n                            <ErrorMessage name=\"apellido\"/>\n                        </div>\n                        <div className=\"form-floating\">\n                            <Field placeholder=\"Rut\" className=\"form-control\" id=\"floatingRut\" name=\"rut\" type=\"text\"/>\n                            <label for=\"floatingRut\">Rut: {props.datos_tutor.datos.rut}</label>\n                            <ErrorMessage name=\"rut\"/>\n                        </div>\n                        <div className=\"form-floating\">\n                            <Field placeholder=\"Edad\" className=\"form-control\" id=\"floatingEdad\" name=\"edad\" type=\"text\"/>\n                            <label for=\"floatingEdad\">Edad: {props.datos_tutor.datos.edad}</label>\n                            <ErrorMessage name=\"edad\"/>\n                        </div>\n\n                        <div className=\"form-floating\">\n                            <Field placeholder=\"Establecimiento Educacional\" className=\"form-control\" id=\"floatingEstablecimiento\" name=\"establecimiento\" type=\"text\"/>\n                            <label for=\"floatingEstablecimiento\">Establecimiento Educacional: {props.datos_tutor.datos.establecimiento}</label>\n                            <ErrorMessage name=\"establecimiento\"/>\n                        </div>\n                        <div className=\"form-floating\">\n                            <Field placeholder=\"Email\" className=\"form-control\" id=\"floatingEmail\" name=\"email\" type=\"email\"/>\n                            <label for=\"floatingEmail\">Email: {props.datos_tutor.datos.email}</label>\n                            <ErrorMessage name=\"email\"/>\n                        </div>\n                            <div class=\"form-floating\">\n                            <SelectFormulario className=\"form-select\" name=\"sexo\">\n                                <option value=\"masculino\">Masculino</option>\n                                <option value=\"femenino\">Femenino</option>\n                                <option value=\"s_otro\">Otro</option>\n                            </SelectFormulario>\n                        </div>                               \n                        <div className=\"form-floating\">\n                            <h4>Mis asignaturas</h4>\n                            <FormularioAsignaturas name=\"asignaturas\" label=\"Agregue las asignaturas que realiza\" />\n                        </div>\n                        <div>\n                            <BotonFormulario className=\"boton-aceptar\" nombre=\"boton\" value=\"Aceptar\"/>\n                        </div>\n                    </div>\n                </Form>\n            </Formik>\n        </div>\n    )\n}\n\nconst MostrarDatos = (props) => { \n    return(\n        <>\n        <div className=\"editar-perfil-tutor\">\n            <div className=\"form-floating\">\n                <input placeholder=\"Nombre\" className=\"form-control\" id=\"floatingNombre\" name=\"nombre\" type=\"text\" disabled/>\n                <label for=\"floatingNombre\">Nombre: {props.datos_tutor.datos.nombre}</label>\n            </div>\n            <div className=\"form-floating\">\n                <input placeholder=\"Apellido\" className=\"form-control\" id=\"floatingApellido\" name=\"apellido\" type=\"text\" disabled/>\n                <label for=\"floatingApellido\">Apellido: {props.datos_tutor.datos.apellido}</label>\n            </div>\n            <div className=\"form-floating\">\n                <input placeholder=\"Rut\" className=\"form-control\" id=\"floatingRut\" name=\"rut\" type=\"text\" disabled/>\n                <label for=\"floatingRut\">Rut: {props.datos_tutor.datos.rut}</label>\n            </div>\n            <div className=\"form-floating\">\n                <input placeholder=\"Edad\" className=\"form-control\" id=\"floatingEdad\" name=\"edad\" type=\"text\" disabled/>\n                <label for=\"floatingEdad\">Edad: {props.datos_tutor.datos.edad}</label>\n            </div>\n\n            <div className=\"form-floating\">\n                <input placeholder=\"Establecimiento Educacional\" className=\"form-control\" id=\"floatingEstablecimiento\" name=\"establecimiento\" type=\"text\" disabled/>\n                <label for=\"floatingEstablecimiento\">Establecimiento Educacional: {props.datos_tutor.datos.establecimiento}</label>\n            </div>\n            <div className=\"form-floating\">\n                <input placeholder=\"Email\" className=\"form-control\" id=\"floatingEmail\" name=\"email\" type=\"email\" disabled/>\n                <label for=\"floatingEmail\">Email: {props.datos_tutor.datos.email}</label>\n            </div>\n            <div className=\"form-floating\">\n                <input placeholder=\"Sexo\" className=\"form-control\" id=\"floatingSexo\" name=\"sexo\" type=\"sexo\" disabled/>\n                <label for=\"floatingSexo\">Sexo: {props.datos_tutor.datos.sexo}</label>\n            </div>\n        </div>\n        <h3>Las asignaturas que enseño son:</h3>\n        <ul className=\"asignaturas-tutor\">\n        {\n            props.datos_tutor.datos.asignaturas.map(asignatura => (\n                <li>{asignatura}</li>\n            ))\n        }\n        </ul>\n        </>\n    )\n}\n\nconst PerfilTutor = (props) => {\n\n    const mi_token = localStorage.getItem('x-token')\n    const tutorID = ObtenerUsuarioID();\n\n    const [editarDatos, seteditarDatos] = useState(false);\n    const updateEditar = () => {\n        seteditarDatos(true)\n    }\n\n    const [tutor, setTutor] = useState([])\n    const [dataTutor, setdataTutor] = useState(true)\n\n    useEffect(() => {\n        const datosTutor = async () => {\n            try{\n                const response = await api.get('/obtenerTutor', props.datos_tutor);\n                if(response && response.data.tutores){\n                    const encontrarTutor = response.data.tutores.filter(profesor => profesor.datos._id === props.datos_tutor.id )\n                    if(dataTutor){\n                        setTutor(encontrarTutor)\n                        setdataTutor(false)\n                    }\n                }\n            }catch(error){\n                console.log(error) \n            }\n\n        }\n        datosTutor();\n    }, [tutor])\n    \n    const [borrarTutor, setBorrar] = useState(false);\n    const updateBorrarTutor = () => {\n        let confirmar = window.confirm(\"Estimado/a \"+tutor[0].datos.nombre+\" \"+tutor[0].datos.apellido+\", desea eleminar su cuenta?\")\n        if(confirmar){\n            setBorrar(true);\n        }\n    }\n\n    useEffect(() => {\n        if(borrarTutor){\n            const borrar = async () => {\n                try{\n                    await api.delete('/borrarTutor/'+tutorID, {\n                        headers: {\n                        'Content-type': 'application/json',\n                        'x-token': mi_token\n                        }\n                    })\n                    alert(\"Gracias por utilizar la plataforma MiTutorWeb. Hasta pronto.\")\n                    localStorage.removeItem('x-token')\n                    window.location.replace('/Inicio')\n                }catch(error){\n                    console.log(error)\n                }\n            }\n            borrar();\n        }\n    }, [borrarTutor])\n\n    return(\n        <div>\n            {   tutor.length >= 1 &&\n                <div className=\"plantilla-perfil\">\n                    <div className=\"informacion-perfil\">\n                        <div className=\"imagen\">\n                            <img src={missing_picture}/>\n                        </div>\n                        <div className=\"datos-perfil\">\n                            <h3>Tutor:</h3>\n                            <h4>{tutor[0].datos.nombre} {tutor[0].datos.apellido}</h4>\n                        </div>\n                        <hr></hr>\n                    </div>\n                    <div>\n                    <h2>Mis datos personales</h2>\n                    { \n                        editarDatos === false ?\n                            <>\n                                <MostrarDatos datos_tutor={tutor[0]} />\n                                <BotonFormulario func={updateEditar} className=\"boton-editar\" nombre=\"boton-editar\" value=\"Editar Datos\" />\n                                <div className=\"botones-perfil\">\n                                    <BotonFormulario className=\"boton-eliminar\" func={updateBorrarTutor} nombre=\"boton\" value=\"Borrar mi cuenta\"/>\n                                </div>\n                                <div>\n                                    <Horario accion=\"modificar\" titulo=\"Publicar Horario\" tutor_id={tutorID}/>\n                                </div>\n                            </>\n                        :\n                            <EditarDatos datos_tutor={tutor[0]} />\n                    }\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default PerfilTutor;\n","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/controllers/DetectarTipoUsuario.js",["157"],"import axios from 'axios'\nimport { useState, useEffect } from 'react'\n\nconst api = axios.create({\n  withCredentials: true, \n  credentials: 'include',\n  baseURL: `http://localhost:2000/api/checkToken`\n})\n\nconst DetectarTipoUsuario = () => {\n  const [usuario, setUsuario] = useState([])\n  const [dataUsuario, setdataUsuario] = useState(true)\n  useEffect(()=>{\n      const obtenerUsuario = async () => {\n          try{\n              const mi_token = localStorage.getItem('x-token')\n              //console.log(mi_token)\n              const tipo_usuario = await api.get('/checkUser',{\n                  headers: {\n                  'Content-type': 'application/json',\n                  'x-token': mi_token\n                  }\n              });\n              if(dataUsuario){\n                  setUsuario(tipo_usuario.data.usuario)\n                  setdataUsuario(false)\n              }\n          }catch(error){\n              console.log(error)\n          }\n      }\n      obtenerUsuario();\n      console.log(usuario)\n  }, [usuario])\n  return usuario\n}\n\nexport default DetectarTipoUsuario","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/controllers/ObtenerUsuarioID.js",["158"],"import { useEffect, useState } from 'react';\nimport axios from 'axios'\n\nconst api_checkTOKEN = axios.create({\n  withCredentials: true, \n  credentials: 'include',\n  baseURL: `http://localhost:2000/api/checkToken`\n})\n\nconst ObtenerUsuarioID = () => {\n    const mi_token = localStorage.getItem('x-token')\n    const [usuarioID, setUsuarioID] = useState();\n    useEffect(() => {\n        const obtenerID = async () => {\n            try{\n                //obtener ID desde el token\n                const usuario = await api_checkTOKEN.get('/checkUser',{\n                    headers: {\n                    'Content-type': 'application/json',\n                    'x-token': mi_token\n                    }\n                });\n                setUsuarioID(usuario.data.usuario.id)\n            }catch(error){\n                console.log(error)\n            }\n        }\n        obtenerID();\n    }, [])\n    if(usuarioID){\n        return usuarioID\n    }\n}\n\nexport default ObtenerUsuarioID;","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/botones/ModalBotonBuscar.js",["159"],"import './BotonFormulario.css' \nimport './ModalBotonBuscar.css'\n\nconst ModalBotonBuscar = (props) => {\n    return(\n        <>\n        { props.tipo === \"asignaturas\" &&\n          <>\n            <button type=\"button\" className={props.className} data-bs-toggle=\"modal\" data-bs-target={\"#\"+props.user+\"Asignaturas\"}>\n            {props.value} \n            </button>\n              <div class=\"modal fade\" id={props.user+\"Asignaturas\"} tabindex=\"-1\" aria-labelledby={props.user+\"LabelAsignaturas\"} aria-hidden=\"false\">\n                <div class=\"modal-dialog\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                      <h5 class=\"modal-title\" id={props.user+\"LabelAsignaturas\"}>{props.title}</h5>\n                      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                      <ul className=\"asignatura-tutor\">\n                      {\n                        props.content.map(asignatura => \n                          <li>{asignatura}</li>\n                        )\n                      }\n                      </ul>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"boton-siguiente\" data-bs-dismiss=\"modal\" >Ok</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n          </>\n        }\n\n        { props.tipo === \"horario\" &&\n          <>\n            <button type=\"button\" className={props.className} data-bs-toggle=\"modal\" data-bs-target={\"#\"+props.user+\"Horario\"}>\n            {props.value} \n            </button>\n              <div class=\"modal fade\" id={props.user+\"Horario\"} tabindex=\"-1\" aria-labelledby={props.user+\"LabelHorario\"} aria-hidden=\"false\">\n                <div class=\"modal-dialog\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                      <h5 class=\"modal-title\" id={props.user+\"LabelHorario\"}>{props.title}</h5>\n                      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                      <dl className=\"horario-tutor\">\n                      {\n                        Object.entries(props.content).map((dia, i) => {\n                          if(dia[0] !== \"_id\"){\n                            let horas = dia[1].map((hora, i) => {\n                              return hora\n                            })\n                            return <>\n                                    <dt className=\"horario-dia\" key={i}>{dia[0]}</dt> \n                                    { horas.length === 0 ? \n                                        <dd className=\"horario-hora\" key={i}>No hay horas disponibles para este día</dd>\n                                        :\n                                        horas.map((hora, i)=> {\n                                        return <dd className=\"horario-hora\" key={i}>{\"--> \"+hora}</dd>\n                                      })\n                                    }\n                                  </>\n                          }\n                        }\n                        )\n                      }\n                      </dl>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"boton-siguiente\" data-bs-dismiss=\"modal\" >Ok</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n          </>\n        }\n        </>        \n    )\n}\n\nexport default ModalBotonBuscar;","/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/chat/ChatVirtual.js",["160","161","162","163"],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/chatsincrono/ChatAsincrono.js",[],"/home/asmith/taller/proyecto1/proyecto-taller/client/src/components/chat/APIZoom.js",["164"],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":53,"column":5,"nodeType":"171","endLine":53,"endColumn":47,"suggestions":"172"},{"ruleId":"169","severity":1,"message":"173","line":94,"column":5,"nodeType":"171","endLine":94,"endColumn":42,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":145,"column":9,"nodeType":"177","endLine":145,"endColumn":37},{"ruleId":"169","severity":1,"message":"178","line":260,"column":6,"nodeType":"171","endLine":260,"endColumn":14,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":45,"nodeType":"182","messageId":"183","endLine":1,"endColumn":53},{"ruleId":"180","severity":1,"message":"184","line":10,"column":7,"nodeType":"182","messageId":"183","endLine":10,"endColumn":19},{"ruleId":"180","severity":1,"message":"185","line":11,"column":11,"nodeType":"182","messageId":"183","endLine":11,"endColumn":17},{"ruleId":"180","severity":1,"message":"186","line":8,"column":7,"nodeType":"182","messageId":"183","endLine":8,"endColumn":17},{"ruleId":"180","severity":1,"message":"187","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":23},{"ruleId":"180","severity":1,"message":"188","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":19},{"ruleId":"180","severity":1,"message":"189","line":26,"column":19,"nodeType":"182","messageId":"183","endLine":26,"endColumn":27},{"ruleId":"180","severity":1,"message":"189","line":36,"column":19,"nodeType":"182","messageId":"183","endLine":36,"endColumn":27},{"ruleId":"180","severity":1,"message":"188","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"190","line":1,"column":28,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"191","line":166,"column":8,"nodeType":"171","endLine":166,"endColumn":20,"suggestions":"192"},{"ruleId":"180","severity":1,"message":"189","line":180,"column":27,"nodeType":"182","messageId":"183","endLine":180,"endColumn":35},{"ruleId":"169","severity":1,"message":"193","line":195,"column":8,"nodeType":"171","endLine":195,"endColumn":26,"suggestions":"194"},{"ruleId":"175","severity":1,"message":"176","line":202,"column":25,"nodeType":"177","endLine":202,"endColumn":53},{"ruleId":"180","severity":1,"message":"195","line":9,"column":8,"nodeType":"182","messageId":"183","endLine":9,"endColumn":27},{"ruleId":"180","severity":1,"message":"196","line":20,"column":12,"nodeType":"182","messageId":"183","endLine":20,"endColumn":23},{"ruleId":"180","severity":1,"message":"197","line":21,"column":11,"nodeType":"182","messageId":"183","endLine":21,"endColumn":23},{"ruleId":"169","severity":1,"message":"198","line":190,"column":8,"nodeType":"171","endLine":190,"endColumn":15,"suggestions":"199"},{"ruleId":"169","severity":1,"message":"200","line":219,"column":8,"nodeType":"171","endLine":219,"endColumn":21,"suggestions":"201"},{"ruleId":"175","severity":1,"message":"176","line":227,"column":29,"nodeType":"177","endLine":227,"endColumn":57},{"ruleId":"169","severity":1,"message":"202","line":34,"column":6,"nodeType":"171","endLine":34,"endColumn":15,"suggestions":"203"},{"ruleId":"169","severity":1,"message":"204","line":29,"column":8,"nodeType":"171","endLine":29,"endColumn":10,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":52,"column":68,"nodeType":"208","messageId":"209","endLine":52,"endColumn":70},{"ruleId":"180","severity":1,"message":"210","line":2,"column":45,"nodeType":"182","messageId":"183","endLine":2,"endColumn":53},{"ruleId":"180","severity":1,"message":"211","line":33,"column":29,"nodeType":"182","messageId":"183","endLine":33,"endColumn":47},{"ruleId":"180","severity":1,"message":"189","line":40,"column":19,"nodeType":"182","messageId":"183","endLine":40,"endColumn":27},{"ruleId":"169","severity":1,"message":"212","line":86,"column":12,"nodeType":"171","endLine":86,"endColumn":22,"suggestions":"213"},{"ruleId":"169","severity":1,"message":"214","line":35,"column":7,"nodeType":"171","endLine":35,"endColumn":9,"suggestions":"215"},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'endFetch'. Either include it or remove the dependency array.","ArrayExpression",["218"],"React Hook useEffect has a missing dependency: 'endChatFetch'. Either include it or remove the dependency array.",["219"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'tutoresFetch'. Either include it or remove the dependency array.",["220"],"no-unused-vars","'useField' is defined but never used.","Identifier","unusedVar","'validaciones' is assigned a value but never used.","'errors' is assigned a value but never used.","'validacion' is assigned a value but never used.","'BotonFormulario' is defined but never used.","'useEffect' is defined but never used.","'response' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dataEstudiante' and 'props.datos_estudiante'. Either include them or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'estudianteID', 'mi_token', and 'props.dato'. Either include them or remove the dependency array.",["222"],"'DetectarTipoUsuario' is defined but never used.","'datos_tutor' is assigned a value but never used.","'obtenerDatos' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataTutor' and 'props.datos_tutor'. Either include them or remove the dependency array.",["223"],"React Hook useEffect has missing dependencies: 'mi_token' and 'tutorID'. Either include them or remove the dependency array.",["224"],"React Hook useEffect has a missing dependency: 'dataUsuario'. Either include it or remove the dependency array.",["225"],"React Hook useEffect has a missing dependency: 'mi_token'. Either include it or remove the dependency array.",["226"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'isObject' is defined but never used.","'setvalidarMensajes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chatID' and 'validarMensajes'. Either include them or remove the dependency array.",["227"],"React Hook useEffect has a missing dependency: 'validarEnlace'. Either include it or remove the dependency array.",["228"],"no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [usuarioID, tipo_usuario, peticionesFetch, endFetch]",{"range":"251","text":"252"},"Update the dependencies array to be: [usuarioID, tipo_usuario, chatsFetch, endChatFetch]",{"range":"253","text":"254"},"Update the dependencies array to be: [filtro, tutoresFetch]",{"range":"255","text":"256"},"Update the dependencies array to be: [dataEstudiante, estudiante, props.datos_estudiante]",{"range":"257","text":"258"},"Update the dependencies array to be: [borrarEstudiante, estudianteID, mi_token, props.dato]",{"range":"259","text":"260"},"Update the dependencies array to be: [dataTutor, props.datos_tutor, tutor]",{"range":"261","text":"262"},"Update the dependencies array to be: [borrarTutor, mi_token, tutorID]",{"range":"263","text":"264"},"Update the dependencies array to be: [dataUsuario, usuario]",{"range":"265","text":"266"},"Update the dependencies array to be: [mi_token]",{"range":"267","text":"268"},"Update the dependencies array to be: [chatID, mensajes, validarMensajes]",{"range":"269","text":"270"},"Update the dependencies array to be: [validarEnlace]",{"range":"271","text":"272"},[1633,1675],"[usuarioID, tipo_usuario, peticionesFetch, endFetch]",[2787,2824],"[usuarioID, tipo_usuario, chatsFetch, endChatFetch]",[9091,9099],"[filtro, tutoresFetch]",[8125,8137],"[dataEstudiante, estudiante, props.datos_estudiante]",[9123,9141],"[borrarEstudiante, estudianteID, mi_token, props.dato]",[8701,8708],"[dataTutor, props.datos_tutor, tutor]",[9712,9725],"[borrarTutor, mi_token, tutorID]",[1017,1026],"[dataUsuario, usuario]",[884,886],"[mi_token]",[3095,3105],"[chatID, mensajes, validarMensajes]",[998,1000],"[validarEnlace]"]